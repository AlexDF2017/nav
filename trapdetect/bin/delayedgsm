#!/usr/bin/perl
##################################################
# Sender delayed sms-meldinger til brukere.
#
# Skrevet av John Magne Bredal 29-06-01
##################################################
use DBI;
use strict;

my $loggfil = "/home/trapdet/log/dsmslogg";
my $dbh = DBI->connect("manage","nett","stotte","mysql") or die "Fikk ikke åpnet databasen\n";
my $nettelid = 0;
my $input_ip;
my $input_enhet;
my $sykoid;
my @message;

chomp (my $idag = `date +%d%m%y-%H:%M`);
open (LOG, ">>$loggfil") || die;
print LOG "---------- $idag ----------\n";
&main();
close LOG;
$dbh->disconnect;

sub main {
    # Velger alle som skal ha dsms
    my $finn_brukere = $dbh->prepare("select userid,gruppeid,trap,kat,ukat,eier,dsms_til from varsel,vgruppe,user where varseltype like \"%dsms%\" and gruppeid=vgruppe.id and user.id=varsel.userid and status!='fri' order by userid,gruppeid;");
    $finn_brukere->execute;

    my %bruker_hash;

    # Setter alle elementer som er null til tekststrengen null
    while (my @bruker_liste = $finn_brukere->fetchrow_array) {
	for (@bruker_liste) {
	    unless ($_) { $_ = "NULL"; }
	}
	$bruker_hash{$bruker_liste[0]}{$bruker_liste[1]} = [$bruker_liste[2],$bruker_liste[3],$bruker_liste[4],$bruker_liste[5],$bruker_liste[6]];
    }

    my @brukere = keys %bruker_hash;

    # Finner starttidspunkt hver enkelt bruker og sender ut evt. beskjeder
    for my $bruker (@brukere) {

	# Alle gruppene som brukeren abonnerer på dsms på
	my @grupper = keys %{$bruker_hash{$bruker}};
	my $gruppe = shift @grupper;

	# Finner tidspunktet bruker skal ha dsms, hvis det er nå, gå videre, hvis ikke stopp.
	my $tidspunkt = $bruker_hash{$bruker}{$gruppe}[4];
	if ($idag =~ /-(\d+)/) {
	    my $time = $1;
	    if ($tidspunkt =~ /$time:\d{2}/) {

		# Finner starttidspunkt som vi må ha til spørring
		my $finn_tidspunkt = $dbh->prepare("SELECT dsms_fra FROM user WHERE id=?");
		$finn_tidspunkt->execute($bruker);
		my $dsms_fra = $finn_tidspunkt->fetchrow_array;
		chomp (my $dato = `date --date '1 day ago' +%Y-%m-%d `);
		$dsms_fra = "$dato $dsms_fra";
		print LOG "Starttidspunkt for spørring: $dsms_fra\n";

		# Spør om det har skjedd noe i løpet av natten
		my $finn_innlegg = $dbh->prepare("Select nettelid,trap,trapsource,trapdescr from status where fra > ? and til is null order by fra");
		$finn_innlegg->execute($dsms_fra);

		print LOG "Finner innlegg til bruker $bruker:\n";
		while (my @innlegg_liste = $finn_innlegg->fetchrow_array) {
		    $nettelid = shift @innlegg_liste;
		    #print LOG "Setter nettelid til $nettelid\n";
		    $sykoid = shift @innlegg_liste;
		    $input_enhet = shift @innlegg_liste;

		    my $finn_info = $dbh->prepare("SELECT kat, underkat, eier, ip, active FROM nettel where id=$nettelid");
		    unless ($finn_info->execute) {
			#print LOG "Finner ikke enhet med nettelid $nettelid\n";
		    }

		    #print LOG " $sykoid ";
		    
		    my @enhet_liste = $finn_info->fetchrow_array;
		    my $active = pop @enhet_liste;

		    # Hvis enheten ikke er aktiv, skal vi ikke sende beskjed.
		    if ((not defined($active)) || $active =~ /Y/i) {
			# Sjekker for alle grupper
			for my $gruppe (@grupper) {
			    my @gruppe_liste = @{$bruker_hash{$bruker}{$gruppe}};
			    # Hvis oid'en stemmer, sjekker vi videre
			    #print LOG " - sjekker om $gruppe_liste[0] = $sykoid .. ";
			    if ($gruppe_liste[0] =~ /$sykoid/i) {
				# Hvis alle kat, ukat og eier stemmer eller er null, så skal vi sende beskjed.
				if ($gruppe_liste[1] =~ /$enhet_liste[0]|null/i && $gruppe_liste[2] =~ /$enhet_liste[1]|null/i && $gruppe_liste[3] =~ /$enhet_liste[2]|null/i) {
				    print LOG "$gruppe_liste[1] = $enhet_liste[0] & $gruppe_liste[2] = $enhet_liste[1] & $gruppe_liste[3] = $enhet_liste[2]\n";
				    print LOG "Sender beskjed til $bruker, $gruppe.\n";
				    &lag_trap(@innlegg_liste);
				    &send_sms($bruker);
				}
			    } else {
				#print LOG "nei, gar videre\n";
			    } # if
			} #for
		    } #if
		} #while
	    } #if
	} # if
	print LOG "-\n";
    } # for
}

sub lag_trap {

    @message = ();
    my @array = @_;
    my $beskjed = shift @array;

    print LOG "$sykoid\n";

    my $funnet;
    my %suboid;

    # Må lese inn suboid'ene fra TrapDetect.conf for å få dem riktig
    open (FIL, "/home/trapdet/etc/TrapDetect.conf") or die "Finner ikke fila".$!;
    while (<FIL>) {
	unless (/^\#/) {
	    if (/$sykoid/) {
		# Har funnet oid'en, hiver alle suboid'er inn i array.
		$funnet = 1;
	    } elsif (/^-/) {
		$funnet = 0;
	    } elsif ($funnet) {
		my @temp = split;
		my $suboid = pop @temp;
		$suboid{$suboid} = 1;
		print LOG "Fant suboid: $suboid\n";
	    }
	}
    }
    close FIL;
    
    # Har alle suboid'ene som keys i %suboid
    # Konstruerer trap'en
    my @beskjedarray = split /\s/, $beskjed;
    my $streng;
    while (@beskjedarray) {
	my $temp = pop @beskjedarray;
	if (exists $suboid{$temp}) {
	    $streng = "$temp = ".$streng;
	    push @message, $streng;
	    $streng = "";
	} else {
	    $streng = "$temp ".$streng;
	}
    }
    print LOG "Message:";
    for (@message) {
	print LOG "$_";
    }
    print LOG "\n";
}

sub send_sms {

    print LOG "Sender sms...\n";

    my $melding = ();
    my $brukerid = shift;
    print LOG "Sender sms til $brukerid\n";

    # Kutter ned på meldingen
    print LOG "Formaterer melding til sms\n";
    my $formatert_melding = &format_sms();
    $formatert_melding =~ s/\"//g;

    print LOG "$formatert_melding\n";

    # Legger meldingen inn i databasen
    print LOG "Legger meldingen inn i databasen...";

    my $ok;
    $ok = $dbh->do("INSERT INTO smsutko (userid, tidspunkt, melding, sendt) VALUES ('$brukerid', now(), '$formatert_melding', 'N')");

    if ($ok) {
    	print LOG "\tFERDIG\n";
    } else {
    	print LOG "det gikk heller dårlig..\n";
    }
}

##################################################
# Generell formatering av meldinger som skal sendes 
# vha. sms. Bruker filen smsconfig som ligger i etc/ 
# til å lese inn formateringsinfo.
# NB! Forskjellig fra den i Trapdetect
##################################################
sub format_sms {
    
    my $oid = $sykoid;
    my $funnet = 0;
    my $innlegg = "";

    # Leser inn formateringsinfo fra fil.
    open (FIL, "/home/trapdet/etc/smsconfig") or die "Kunne ikke åpne fil $!\n";
    while (<FIL>) {
	# Hopper over kommentarer
	unless (/^\#/) {
	    if (/^$oid/) {
		chomp;
		print LOG "Fant oid i fil: $_\n";
		$funnet = 1;
		$innlegg = $_;
	    }
	}
    }
    close FIL;

    if ($funnet) {
	my %var = (); # Her legges suboider

	# Message må ikke forandres!
	my @temp_message = @message;

	# Parser message
	$var{"avsender"} = $input_enhet;
	for (@temp_message) {
	    my @temp = split;
	    my $suboid = shift @temp;
	    shift @temp; # fjerner =
	    my $temp_streng;
	    while (my $temp = shift @temp) {
		$temp_streng .= $temp." ";
	    }
	    chop $temp_streng;
	    $var{$suboid} = $temp_streng;
	    $temp_streng = "";
	}

	# Replacer alle instanser av variable som er lik
	# suboider i config-fila.
	my @suboid = keys (%var);
	for (@suboid) {
	    $innlegg =~ s/\$$_/$var{$_}/;
	}
	print LOG $innlegg."\n";
	return $innlegg;
    } else {
	print LOG "Fant ikke innlegg i config-fil.\n";
    }

} # End format_sms
