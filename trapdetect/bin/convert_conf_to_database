#!/usr/bin/perl -w
##################################################
# Et script som leser inn fra TrapDetect.conf og
# legger det inn i databasen i tabellene
# trap, subtrap, trapkat og trapeier
#
# 18.06.01 - John Magne Bredal
##################################################

use strict;
use DBI;

my $valg = shift @ARGV;

my $verbose;
if (defined $valg) {
    if ($valg eq 'v') {
	$verbose = 1;
    } else {
	$verbose = 0;
    }
}

my ($ok,$ok2, $ok_org, $ok_kat); # Feilsjekkvariable
my $fil = "../etc/TrapDetect.conf_bak"; # conf-fila som skal legges inn i database.

my $dbh = DBI->connect("trapdetect","nett","stotte","mysql") or die "Fikk ikke åpnet databasen\n";

&les_fil();
if ($ok && $ok2 && $ok_org && $ok_kat) {
    print "Ferdig - alt ok\n";
} else {
    print "Noe galt skjedde under innlegging i database\n";
    if (!$ok) {
	print "Muligens med hovedoid'ene.";
    } elsif (!$ok2){
	print "Muligens med suboid'ene.";
    } elsif (!$ok_org) {
	print "Muligens med eierforholdet.";
    } elsif (!$ok_kat) {
	print "Muligens med kategoriene.";
    }
    print " Sjekk formatering og kjør scriptet en gang til\n";
}

##################################################
# Leser data fra config-fil. Legger all data i 5
# assosiative lister (hash), med navn:
# beskrivelse: beskrivelsen til trap'en
# kategorier: hvilke kategorier trap'en tilhører
# trap: selve trap'en med all tekst og oid'er
# suboid: nettopp det
# eier: eiere som kan akessere denne trap'en
##################################################
sub les_fil {

    my $bool = 0; # Angir om vi skal fortsette og lete etter suboid'er
    my %beskrivelse; # Alle beskrivelser; trap som key
    my %kategorier; # Alle kategorier med trap som key
    my %trap; # Alle traps med suboid'er; trap som key
    my %suboid; # Alle suboid'er som tilhører den trap'en som er key
    my %eier; # Alle eiere som kan aksessere denne trapen som er key.
    my ($besk,$kat,$eiere);
    my @temp_suboid;
    my ($sykoid,$syktekst,$friskoid,$frisktekst,$hovedkat);
    open (FIL, $fil) or die "Kunne ikke åpne $fil\n";    
    while (<FIL>) {
	chomp;
	unless (/^\#/) { # Skipper kommentarer
	    s/\#.*//; # Fjerner alt etter en evt. kommentar.
	    if (/^kat(\d)/) { # Finner hovedkategori
		$hovedkat = $1;
	    }
	    if (/^-/) { # Angir start/stopp av trapbeskrivelse
		# Resetter alle variable og gjør klar for ny trap
		$besk = "";
		$bool = 0;
		if (defined ($sykoid)) {
		    if (@temp_suboid) {
			$suboid{$syktekst} = [@temp_suboid];
			@temp_suboid = ();
		    }
		}
	    } elsif (/^:/) { # Beskrivelse av trap
		$besk = $_;
		$besk =~ s/^:\s*//;
	    } elsif (/^\.\d/ && not $bool) { #oid'er
		my @linje = split;
		my $antall = @linje;
		if ($antall == 4) { # Tilstandsløse traps
		    ($sykoid, $syktekst, $kat, $eiere) = @linje;
		    $bool = 1;
		    $eier{$syktekst} = $eiere;
		    $kategorier{$syktekst} = $kat;
		    $beskrivelse{$syktekst} = $besk;
		    $trap{$syktekst} = [$sykoid,$syktekst,$hovedkat];
		} elsif ($antall == 6) { # Tilstandsfulle traps
		    ($sykoid,$syktekst,$friskoid,$frisktekst,$kat,$eiere) = @linje;
		    $bool = 1;
		    $eier{$syktekst} = $eiere;
		    $kategorier{$syktekst} = $kat;
		    $beskrivelse{$syktekst} = $besk;
		    $trap{$syktekst} = [$sykoid,$syktekst,$friskoid,$frisktekst,$hovedkat];
		} else {
		    $bool = 0;
		}
	    } elsif (/^\.\d/ && $bool) { # suboid'er
		my ($suboid, $navn);
		my @linje = split;
		my $antall = @linje;
		if ($antall == 2) {
		    ($suboid, $navn) = @linje;
		    push @temp_suboid,[$suboid,$navn];
		}
	    }
	}
    }
    close FIL;

    # Ferdig med filen, skriver ut all informasjon som er samlet inn
    # hvis folk vil se det. Må settes explisitt.

    if ($verbose) {
	print "\n\nINNSAMLET DATA:\n\n";

	my @keys = keys (%kategorier);
	for (@keys) {
	    print "$_ = $kategorier{$_}\n";
	}
	print "\n";
	@keys = keys (%trap);
	for (@keys) {
	    my $temp;
	    $temp = $trap{$_};
	    print "@$temp ";
	    print "\n";
	}
	print "\n";
	@keys = keys (%beskrivelse);
	for (@keys) {
	    print "$_ = $beskrivelse{$_}\n";
	}

	print "\n";
	@keys = keys (%suboid);
	for (@keys) {
	    my @temparr = @{$suboid{$_}};
	    for (@temparr) {
		my($test1,$test2) = @$_;
	    }
	}

	print "\n";
	@keys = keys (%eier);
	for (@keys) {
	    print "$_: $eier{$_}\n";
	}
    }

    # Sletter alt fra databasen siden bare det som er i 
    # fila skal være i databasen.
    my $sporring = "delete from trap";
    my $rows = $dbh->do($sporring);

    # Legger inn alle traps i trap-tabellen
    my @keys = keys (%trap);
    for (@keys) {
	$besk = $beskrivelse{$_};
	my @arr = @{$trap{$_}};
	my $length = @arr;
	if ($length == 5) {
	    # Tilstandsfull funnet
	    ($sykoid,$syktekst,$friskoid,$frisktekst,$hovedkat) = @arr;
	    $sporring = "insert into trap (sykoid,syknavn,friskoid,frisknavn,beskrivelse,type) values ";
	    $sporring .= "('$sykoid','$syktekst','$friskoid','$frisktekst','$besk',$hovedkat)";
	    $ok = $dbh->do($sporring);
	} elsif ($length == 3) {
	    # Tilstandsløs funnet
	    ($sykoid,$syktekst,$hovedkat) = @arr;
	    $sporring = "insert into trap (sykoid,syknavn,beskrivelse,type) values ('$sykoid','$syktekst','$besk',$hovedkat)";
	    $ok = $dbh->do($sporring);
	}
    }

    # Henter alle id'er fra trap-tabellen til bruk senere
    %trap = ();
    $sporring = "select id,syknavn from trap";
    my $finn_traps = $dbh->prepare($sporring);
    $finn_traps->execute;
    while (my @res = $finn_traps->fetchrow_array) {
	$trap{$res[1]} = $res[0];	
    }

    # Henter alle id'er fra org-tabellen til bruk senere
    my %org = ();
    $sporring = "select id,navn from org";
    my $finn_org = $dbh->prepare($sporring);
    $finn_org->execute;
    while (my @res = $finn_org->fetchrow_array) {
	my $temp = lc $res[1];
	$org{$temp} = $res[0];	
    }    

    # Legger inn alle suboid'er i subtrap-tabellen
    $dbh->do("delete from subtrap");
    my $key;
    @keys = keys (%suboid);
    foreach $key (@keys) {
	my @temparr = @{$suboid{$key}};
	for (@temparr) {
	    my ($suboid,$navn) = @$_;
	    $sporring = "insert into subtrap (trapid,suboid,navn) values ";
	    $sporring .= "($trap{$key},'$suboid','$navn')";
	    $ok2 = $dbh->do($sporring);
	}
    }

    # Legger alle kategoriene inn i trapkat-tabellen.
    $dbh->do("delete from trapkat");
    @keys = keys (%kategorier);
    foreach $key (@keys) {
	my $kat = $kategorier{$key};
	my @alle = split /,/,$kat;
	unless ($kat =~ /ingen/i) {
	    for (@alle) {
		$sporring = "insert into trapkat (trapid,kat) values ($trap{$key},'$_')";
		$ok_kat = $dbh->do($sporring);
	    }
	}
    }

    # Legger alle org-trap-sammenhenger i trapeier
    $dbh->do("delete from trapeier");
    @keys = keys (%eier);
    foreach $key (@keys) {
	my $eiere = $eier{$key};
	my @alle = split /,/,$eiere;
	for (@alle) {
	    $_ = lc $_;
	    if (exists $org{$_}) {
		$sporring = "insert into trapeier (orgid,trapid) values ($org{$_},$trap{$key})";
		$ok_org = $dbh->do($sporring);
	    }
	}
    }
}
