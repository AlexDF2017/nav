#!/usr/bin/env bash
####################
#
# $Id$
# This file is part of the NAV project.
# This file contains functions to be used by most or all shell scripts
# in the navme/bin/init directory.
#
# Copyright (c) 2002-2003 by NTNU, ITEA nettgruppen
# Authors: Morten Vold <morten.vold@itea.ntnu.no>
# Credits: Miquel van Smoorenburg <miquels@drinkel.nl.mugnet.org>
#
####################
prefix=@prefix@
exec_prefix=@exec_prefix@
sysconfdir=@sysconfdir@
initdir=@initdir@
bindir=@bindir@
localstatedir=@localstatedir@

daemon() {
    $1
    rc=$?
    if [ $rc = 0 ]; then
	echo -n "Ok"
	return 1
    else
	echo -n "Failed"
	return 0
    fi
}

killproc() {
    pid=`pidofproc $1`
    if [ -z "$pid" ] ; then
	return 1
    fi
    if checkpid $pid 2>&1; then
	kill $pid
	usleep 10000
	if checkpid $pid 2>&1; then
	    echo -n "Unable to terminate the process ($pid)"
	    return 1
	else
	    echo -n "Ok"
	    return 0
	fi
    else
	echo -n "$1 is not running"
	return 0
    fi
}

status() {
    local base=${1##*/}
    local pid=`pidofproc $1`
    if [ "$pid" != "" ] ; then
	echo "$1 (pid $pid) is running...";
    else
	echo "$1 does not seem to be running...";
    fi
}

# Check if $pid (could be plural) are running
checkpid() {
	while [ "$1" ]; do
	   [ -d /proc/$1 ] && return 0
	   shift
	done
	return 1
}

pidofproc() {
    local base=${1##*/}
    local PIDOF=/sbin/pidof
    local pidfile=${localstatedir}/run/${base}.pid

    if [ -f $pidfile ] ; then
	local line p pid=
	read line < $pidfile
	for p in $line ; do
	    [ -z "${p//[0-9]/}" -a -d /proc/$p ] && pid="$pid $p"
	done
	if [ -n "${pid-:}" ] ; then
	    echo $pid
	    return 0
	fi
    fi

    $PIDOF -o $$ -o $PPID -o %PPID -x $1 || \
    $PIDOF -o $$ -o $PPID -o %PPID -x ${base}
}
