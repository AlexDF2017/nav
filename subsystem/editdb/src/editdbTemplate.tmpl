## $Id$
##
## Copyright 2003, 2004 Norwegian University of Science and Technology
##
## This file is part of Network Administration Visualized (NAV)
##
## NAV is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## NAV is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with NAV; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
##
## Author: Hans Jørgen Hoel <hansjorg@orakel.ntnu.no>
##

#extends nav.web.templates.MainTemplate
#from nav.web.templates.selectTreeTemplate import selectTreeTemplate

#def additionalCSS
    ## CSS Tooltip
    a.info      { position: relative;
                  z-index: 24;
                  background-color: #ccc,
                  color: #0f0;
                  text-decoration: none}
    
    a.info:hover { 
                  z-index: 25;
                  background-color: #ff0}

    a.info span {display: none}

    a.info:hover span {
                  display: block;
                  position: absolute;
                  top: 2em;
                  left: 2em;
                  width: 15em;
                  padding: 4px;
                  border: 1px solid #000;
                  background-color: #588;
                  color: #000;}
    
    ## Table style 
    tr.header   { background-color: white;
                  background-image:url('/images/ragen/navbar-fill.gif');
                  background-repeat: repeat-x;
                  height: 26px;
                  padding: 1px 0px 0px 0px;
                  font-size: 13; }

    tr.evenrow  { font-size: 12; background-color: #eeeeee; }
    tr.oddrow   { font-size: 12; }

    td.startheader {
                  background-color: white;
                  background-image: url('/images/ragen/navbar-start.gif');
                  background-repeat: no-repeat;
                  width: 14px}

    td.endheader { 
                  background-color: white;
                  background-image:url('/images/ragen/navbar-end.gif');
                  background-position: top right;
                  background-repeat: no-repeat;
                  width: 14px}

    ## Status and error style
    p.error     { color: #ff0000; }
    p.status    { color: #00bb00; }
    p.infotext  { width: 80%;
                  font-size: 13; }
$default_form_CSS()
#end def

#def content
#if $entryList
$showSelectList($entryList)
#elif $editList
$showList($editList)
#elif $editForm
$showForm($editForm)
#else
$showBody($body)
#end if
#end def

## function showSelectList
##
## Function for displaying a list in a table with optional
## radiobuttons or checkboxes for selecting rows
##
## $selectList
##   ++-- title                     :: list title
##   ++-- formMethod                :: method for form, post or get
##   ++-- formAction                :: action for form
##   ++-- selectCname               :: controlname for radiob./checkbox
##   ++-- status                    :: editdb.status object
##   ++-- buttonsTop                :: list of buttons for top of list
##          +-- (cname,value)       :: tuple of control name and value (text)
##   ++-- buttonsBottom             :: list of buttons for bottom of list
##          +-- (cname,value)       :: tuple of control name and value (text)
##   ++-- headings                  :: list of heading cells (cell objects)
##          +-- text                :: heading text
##          +-- url                 :: heading link (optional)
##   ++-- rows                      :: array of rows
##          +-- (id,cells)          :: tuple (id, list of cells)
##                +-- text          :: cell text
##                +-- url           :: link for this cell
##                +-- checkbox      :: boolean, show a checkbox in this cell
##                +-- radiobutton   :: boolean, show a radiobuttion
##                +-- image         :: path to an image (optional)
##                +-- tooltip       :: list of tooltip strings (optional) 
##
#def $showSelectList($selectList)
    <h3>$selectList.title</h3>
#if $selectList.body
    <p>$selectList.body</p>
#end if
#if $selectList.status
    $showStatus($selectList.status)
#end if
## Filters
#if $selectList.filters
    $renderFilters($selectList)
#end if
    <form method="$selectList.formMethod" action="$selectList.formAction">
## Top buttons
#if $selectList.buttonsTop
        <p>
#for $cname,$value in $selectList.buttonsTop
            <input type="submit" name="$cname" value="$value">
#end for
        </p>
#end if
        <table border="0" cellspacing="0" cellpadding="0">
## Show headings
            <tr class="header">
                <td class="startheader">
#for $cell in $selectList.headings
                <td valign="top">
#if $cell.url
                    <a href="$cell.url">$cell.text</a>&nbsp;
#else
                    $cell.text&nbsp;
#end if
#if $cell.tooltip
                    <span>
#for $line in $cell.tooltip
                        $line<br>
#end for
                    </span>
#end if
                </td>
#end for
                <td class="endheader">
            </tr>
## Rows
#set $oddRow = True
#for $fullrow in $selectList.rows
## $fullrow[0] is sortKey
#set $id = $fullrow[1][0]
#set $row = $fullrow[1][1]
## Set rowstyle
#if $oddRow
#set $rowstyle = 'oddrow'
#set $oddRow = False
#else
#set $rowstyle = 'evenrow'
#set $oddRow = True
#end if
            <tr class="$rowstyle">
## Cells in a row
                <td>&nbsp;</td>
#for $cell in $row
                <td>
#if $cell.url
                    <a href="$cell.url">
#elif $cell.tooltip
                    <a title="" class="info" href="#$id">
#end if
#if $cell.image
                    <img src="$cell.image">
#end if
#if $cell.text
#set $first = True
#for $line in $cell.text
#if not $first
                        <br>
#end if
#set $first = False
                    $line
#end for
#end if
#if $cell.tooltip
                    <span>
#set $first = True
#for $line in $cell.tooltip
#if not $first
                        <br>
#end if
#set $first = False
                        $line
#end for
                    </span>
#end if
#if $cell.buttonType == 'chk'
                    <input type="checkbox" name="$selectList.selectCname" value="$id">
#elif $cell.buttonType == 'rad'
                    <input type="radio" name="$selectList.selectCname" value="$id">
#elif $cell.buttonType == 'hid'
                    <input type="hidden" name="$selectList.selectCname" value="$id">
#end if
#if $cell.url or $cell.tooltip
                    </a>
#end if
                    &nbsp;&nbsp;
                </td>
#end for
                <td>&nbsp;</td>
            </tr>
#end for
        </table>
## Bottom buttons
#if $selectList.buttonsBottom
        <p>
#for $cname,$value in $selectList.buttonsBottom
            <input type="submit" name="$cname" value="$value">
#end for
        </p>
#end if
    </form>
#end def

## function renderFilters
##
## Function for displaying list filters
##
#def renderFilters($slist)
<form method="$slist.formMethod" action="$slist.filterAction">
    <table class="header-active">
#set $filters = $slist.filters
#for $listFilter in $filters
        <tr>
            <td>${listFilter[0]}</td>
            <td>
                <select name="${listFilter[5]}">
##raise repr($listFilter)
#for $option in $listFilter[9]
#if $option[0][0] == $listFilter[10]:
                    <option value="$option[0][0]" selected>$option[1][0]</option>
#else
                    <option value="$option[0][0]">$option[1][0]</option>
#end if
#end for
                </select>
            </td>
        </tr>
#end for
        <tr>
            <td colspan="2" align="right"><input type="submit" name="$slist.filterConfirm" value="$slist.filterConfirmText"</td>
        </tr>
    </table>
</form>
#end def


## function showStatus
##
## Function for displaying status and error messages
## takes an editdb.status object as parameter
##
## $status
##   +-- messages                   :: list of message strings
##   +-- errors                     :: list of error strings
##
#def $showStatus($status)
    <p class="status">
#for $message in $status.messages
        $message<br>
#end for
    </p>
    <p class="error">
#for $error in $status.errors
        $error<br>
#end for
    </p>
#end def

## Form to show a body object
## ie. display the editdb main menu
#def $showBody($body)
    <h2>$body.title</h2>
#if $body.status
    $showStatus($body.status)
#end if
    <p class="infotext">$body.infotext</p>
    <p>
#if not $body.showHelp
        <a href="$body.help[0]">$body.help[1]</a>

#else
        <a href="$body.nohelp[0]">$body.nohelp[1]</a>
#end if
    </p>
#for $table in $body.tables
    <h3>$table.title</h3>
#if $table.infotext
    <p>$table.infotext</p>
#end if
#if $body.showHelp
    <table style="width: 80%;">
#else
    <table style="width: 40%;">
#end if
#if $table.headings
        <tr>
#for $heading in $table.headings
            <th>$heading</th>
#end for
        </tr>
#end if
#set odd = False
#for $row in $table.rows
#if odd == True
#set style = "oddrow"
#set odd = False
#else
#set style = "evenrow"
#set odd = True
#end if
#if $body.showHelp
#set $rowstyle=['width: 10%;','width: 60%;','','','']
#else
#set $rowstyle=['width: 40%;','','width: 15%;','width: 15%;','width: 30%;']
#end if
        <tr class="$style" title="$row[1]">
            <td style="$rowstyle[0]">$row[0]</td>
#if $body.showHelp
            <td style="$rowstyle[1]">$row[1]</td>
#end if
#if $row[2]
## Add
            <td style="$rowstyle[2]"><a href="$row[2][0]">$row[2][1]</a></td>
#else
            <td>&nbsp;</td>
#end if
            <td style="$rowstyle[3]"><a href="$row[3][0]">$row[3][1]</a></td>
#if $row[4]
## Bulk import
            <td style="$rowstyle[4]"><a href="$row[4][0]">$row[4][1]</a></td>
#else
            <td>&nbsp;</td>
#end if
        </tr>
#end for
    </table>
#end for
#end def


## Function to display a list for selecting
## which entries to edit, or delete
#def showList($list)
    <H3>$list.title</H3>
#if $list.status
    <P class="status">
#for $message in $list.status.messages
        $message<BR>
#end for
    </P>
    <P class="error">
#for $error in $list.status.errors
        $error<BR>
#end for
    </P>
#end if
#if $list.isBulkList
## Show bulk preview legend
        <P>
            Legend
        </P>
        <P>
            <IMG src="$list.imgGreen">&nbsp;$list.legendGreen<BR>
            <IMG src="$list.imgRed">&nbsp;$list.legendRed<BR>
            <IMG src="$list.imgYellow">&nbsp;$list.legendYellow<BR>
        </P>
#end if
    <FORM method="$list.method" action="$list.action">
#if $list.hiddenIdValue
        <INPUT type="hidden" name="$list.cnameHiddenId" value="$list.hiddenIdValue">
#end if
#if not $list.isDeleteList
    $actionBar($list)
#end if
        <TABLE border="0" cellspacing="0" cellpadding="0">
            <TR class="header">
                <TD bgcolor="white" style="background-image:url('/images/ragen/navbar-start.gif'); background-repeat: no-repeat; width: 14px">
#for $heading in $list.headings
                <TD valign="top">$heading&nbsp;</TD>
#end for
                <TD bgcolor="white" style="background-image:url('/images/ragen/navbar-end.gif'); background-position: top right; background-repeat: no-repeat; width: 14px;">
            </TR>
#set $odd = True
#for $id,$row in $list.rows
#if $odd
#set $rowtype = 'oddrow'
#set $odd = False
#else
#set $rowtype = 'evenrow'
#set $odd = True
#end if
            <TR class="$rowtype">
                <TD>&nbsp;</TD> ## first column is start gfx (fix)
#if not ($list.isDeleteList or $list.isBulkList)
                <TD><INPUT type="checkbox" name="$list.cnameChk" value="$id" align="center">&nbsp;&nbsp;</TD>
#elif $list.isDeleteList
                <INPUT type="hidden" name="$list.cnameChk" value="$id">
#end if
#for $entry,$link in $row
#if $link
                <TD><A href="$link">$entry[0]</A>&nbsp;&nbsp;</TD>
#else
                <TD>
#for $line in $entry
                    $line&nbsp;&nbsp;<BR>
#end for
                </TD>
#end if
#end for
                <TD>&nbsp;</TD> ## last column is end gfx (fix)
            </TR>
#end for
        </TABLE>
    $actionBar($list)
#if $list.isBulkList
#for $name,$value in $list.hiddenData
    <INPUT type="hidden" name="$name" value="$value">
#end for
#end if
    </FORM>
    $showPath(False)
#end def

## This function displays the bar with add/edit/delete buttons
#def actionBar($list)
    <P>
        <TABLE>
            <TR>
#if not ($list.isDeleteList or $list.isBulkList)
                <TD><INPUT type="submit" name="$list.cnameAdd" value="$list.textAdd"></TD>
                <TD><INPUT type="submit" name="$list.cnameEdit" value="$list.textEdit"></TD>
                <TD><INPUT type="submit" name="$list.cnameDelete" value="$list.textDelete"</TD>
#elif $list.isDeleteList
                <TD><INPUT type="submit" name="$list.cnameDeleteConfirm" value="$list.textDeleteConfirm"></TD>
#elif $list.isBulkList
                <TD><INPUT type="submit" name="$list.cnameBulkConfirm" value="$list.textBulkConfirm"></TD>
#end if
            </TR>
        </TABLE>
    </P>
#end def

## Function for displaying a form for adding or editing
#def showForm($form)
    <H3>$form.title</H3>
#if $form.status
    <P class="status">
#for $message in $form.status.messages
        $message<BR>
#end for
    </P>
    <P class="error">
#for $error in $form.status.errors
        $error<BR>
#end for
    </P>
#end if
    <FORM method="$form.method" action="$form.action" enctype="$form.enctype">
#for $editbox in $form.editboxes
        <INPUT type="hidden" name="$editbox.boxName" value="$editbox.boxId">
        <P>
#if $editbox.page == 'room'
            $room($editbox)
#elif $editbox.page == 'container'
            $container($editbox)
#elif $editbox.page == 'location'
            $location($editbox)
#elif $editbox.page == 'org'
            $org($editbox)
#elif $editbox.page == 'type'
            $typebox($editbox)
#elif $editbox.page == 'vendor'
            $vendor($editbox)
#elif $editbox.page == 'netbox'
            $netbox($editbox)
#elif $editbox.page == 'netboxserial'
            $netboxserial($editbox)
#elif $editbox.page == 'netboxcategory'
            $netboxcategory($editbox)
#elif $editbox.page == 'netboxproduct'
            $netboxproduct($editbox)
#elif $editbox.page == 'bulk'
            $bulk($editbox)
#elif $editbox.page == 'usage'
            $usage($editbox)
#elif $editbox.page == 'service'
            $service($editbox)
#elif $editbox.page == 'serviceproperties'
            $serviceproperties($editbox)
#elif $editbox.page == 'product'
            $product($editbox)
#elif $editbox.page == 'prefix'
            $prefix($editbox)
#elif $editbox.page == 'ric'
            $ric($editbox)
#elif $editbox.page == 'vlan'
            $vlan($editbox)
#elif $editbox.page == 'subcat'
            $subcat($editbox)
#elif $editbox.page == 'snmpoid'
            $snmpoid($editbox)
#elif $editbox.page == 'hiddenormessage'
            $hiddenormessage($editbox)
#elif $editbox.page == 'cabling'
            $cabling($editbox)
#elif $editbox.page == 'patch'
            $patch($editbox)
#end if
        </P>
#end for
#if $form.showConfirm
        <TABLE>
            <TR>
                <TD><INPUT type="submit" name="$form.cnameConfirm" value="$form.textConfirm"></TD>
#if $form.showCancel
             <TD><INPUT type="submit" name="$form.cnameCancel" value="$form.textCancel"></TD>
#end if 
            </TR>
        </TABLE>
    </FORM>
#end if
#end def



##
## Forms for adding and editing
##

## For for editing patches
#def patch($editbox)
#set $fields = $editbox.fields
    <p>
        $editbox.help
    </p>
    <div style="border: 1px solid #666; background-image:url('/images/form/fill-active.gif');   background-color:#ccf; font-size: 13px; padding-top: 1em; padding-bottom: 1em; padding-left: 1em;">
        <p>
            $input($fields['box1'])
        </p>
        <p>
            <h3>$heading($fields['split'])</h3>
            $input($fields['split'])
        </p>
        <p>
            $input($fields['box2'])
        </p>
    </div>
#end def

## Form for editing cabling
#def cabling($editbox)
#set $fields = $editbox.fields
    <P>
        <TABLE class="header-active">
            <TR>
                <TH colspan="2">$heading($fields['roomid'])</TH>
                <TH>$heading($fields['jack'])</TH>
            </TR>
            <TR>
                <TD colspan="2">$input($fields['roomid'])</TD>
                <TD>$input($fields['jack'])</TD>
            </TR>
            <TR>
                <TH>$heading($fields['building'])</TH>
                <TH>$heading($fields['targetroom'])</TH>
                <TH>$heading($fields['category'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['building'],'width: 100%;')</TD>
                <TD align="center">$input($fields['targetroom'])</TD>
                <TD>$input($fields['category'])</TD>
            </TR>
            <TR>
                <TH colspan="3">$heading($fields['descr'])</TH>
            </TR>
            <TR>
                <TD colspan="3">$input($fields['descr'],'width: 100%;')</TD>
            </TR>
        </TABLE>
    </P>
#end def

## Form for entering a serialnumber
#def netboxserial($editbox)
#set $fields = $editbox.fields
    <P>
        <TABLE class="header-active">
            <TR>
                <TD>Sysname</TD>
                <TD>$editbox.sysname</TD>
            </TR>
            <TR>
                <TD>Type</TD>
                <TD>$editbox.typename</TD>
            </TR>
            <TR>
                <TD>SNMP version</TD>
                <TD>$editbox.snmpversion</TD>
            </TR>
        </TABLE>
    </P>
    <P>$editbox.help</P>
    <P>
        <TABLE class="header-active">
            <TR>
                <TH>$heading($fields['serial'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['serial'])</TD>
            </TR>
        </TABLE>
    </P>
<!-- def netboxserial ->
$hiddenfields($editbox.hiddenFields)
#end def

## Form for server subcat and function
#def netboxcategory($editbox)
#set $fields = $editbox.fields
    <P>$editbox.help</P>
    <P>
        <TABLE class="header-active">
#if $fields.has_key('subcat')
            <TR>
                <TH>$heading($fields['subcat'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['subcat'],'width: 100%;')</TD>
            </TR>
#end if
            <TR>
                <TH>$heading($fields['function'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['function'])</TD>
            </TR>
        </TABLE>
    </P>
#end def

## Form for adding or editing a netbox
#def netbox($editbox)
#set $fields = $editbox.fields
#if $editbox.editId
    <H3>$editbox.sysname</H3>
#end if
        <TABLE class="header-active">
            <TR>
                <TH>$heading($fields['ip'])</TH>
                <TH>$heading($fields['catid'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['ip'])</TD>
                <TD>$input($fields['catid'],style='width: 100%;')</TD>
            </TR>
            <TR>
                <TH>$heading($fields['ro'])</TH>
                <TH>$heading($fields['roomid'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['ro'])</TD>
                <TD>$input($fields['roomid'],style='width: 100%;')</TD>
            </TR>
            <TR>
                <TH>$heading($fields['rw'])</TH>
                <TH>$heading($fields['orgid'])</TH>
            </TR>
            <TR>
                <TD>$input($fields['rw'])</TD>
                <TD>$input($fields['orgid'])</TD>
            </TR>
        </TABLE>
<!-- def netbox ->
$hiddenfields($editbox.hiddenFields)
#end def

## Form for adding or editing an snmpoid
#def snmpoid($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['oidkey'])</TH>
            <TH>$heading($fields['snmpoid'])</TH>
            <TH>$heading($fields['oidsource'])</TH>
            <TH>$heading($fields['match_regex'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['oidkey'])</TD>
            <TD>$input($fields['snmpoid'])</TD>
            <TD>$input($fields['oidsource'])</TD>
            <TD>$input($fields['match_regex'])</TD>
        </TR>
        <TR>
            <TH colspan="2">$heading($fields['oidname'])</TH>
            <TH colspan="2">$heading($fields['mib'])</TH>
        </TR>
        <TR>
            <TD colspan="2">$input($fields['oidname'],'width: 100%;')</TD>
            <TD colspan="2">$input($fields['mib'],'width: 100%;')</TD>
        </TR>
        <TR>
            <TH colspan="4">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD colspan="4">$input($fields['descr'],'width: 100%;')</TD>
        </TR>
    </TABLE>
$hiddenfields($editbox.hiddenFields)
#end def




## Form for adding or editing a room
#def room($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['roomid'])</TH>
            <TH>$heading($fields['locationid'])</TH>
            <TH colspan="2">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['roomid'])</TD>
            <TD>$input($fields['locationid'])</TD>
            <TD colspan="2">$input($fields['descr'],'width: 100%;')</TD>
        </TR>
        <TR>
            <TH>$heading($fields['opt1'])</TH>
            <TH>$heading($fields['opt2'])</TH>
            <TH>$heading($fields['opt3'])</TH>
            <TH>$heading($fields['opt4'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['opt1'])</TD>
            <TD>$input($fields['opt2'],'width: 100%;')</TD>
            <TD>$input($fields['opt3'])</TD>
            <TD>$input($fields['opt4'])</TD>
        </TR>
    </TABLE>
$hiddenfields($editbox.hiddenFields)
#end def

## Form for adding or editing a location
#def location($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active" width="50%">
        <TR>
            <TH width="30%">$heading($fields['locationid'])</TH>
            <TH width="70%">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['locationid'],'width: 100%;')</TD>
            <TD>$input($fields['descr'],'width: 100%;')</TD>
        </TR>
    </TABLE>
$hiddenfields($editbox.hiddenFields)
#end def

## Form for adding or editing an org
#def org($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['orgid'])</TH>
            <TH colspan="2">$heading($fields['parent'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['orgid'])</TD>
            <TD colspan="2">$input($fields['parent'])</TD>
        </TR>
        <TR>
            <TH colspan="3">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD colspan="3">$input($fields['descr'],'width: 100%;')</TD>
        </TR>
        <TR>
            <TH>$heading($fields['opt1'])</TH>
            <TH>$heading($fields['opt2'])</TH>
            <TH>$heading($fields['opt3'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['opt1'])</TD>
            <TD>$input($fields['opt2'])</TD>
            <TD>$input($fields['opt3'])</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing a type
#def typebox($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active" width="60%">
        <TR>
            <TH colspan="3" width="30%">$heading($fields['typename'])</TH>
            <TH>$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD colspan="3">$input($fields['typename'],'width: 100%;')</TD>
            <TD>$input($fields['descr'],'width: 100%;')</TD>
        <TR>
            <TH colspan="3">$heading($fields['vendorid'])</TH>
            <TH>$heading($fields['sysobjectid'])</TH>
        </TR>
            <TD colspan="3">$input($fields['vendorid'],'width: 100%;')</TD>
            <TD>$input($fields['sysobjectid'],'width: 100%')</TD>
        </TR>
        <TR>
            <TH>$heading($fields['cdp'])</TH>
            <TH>$heading($fields['tftp'])</TH>
            <TH>$heading($fields['frequency'])</TH>
            <TD>&nbsp;</TD>
        </TR>
        <TR>
            <TD align="center">$input($fields['cdp'])</TD>
            <TD align="center">$input($fields['tftp'])</TD>
            <TD>$input($fields['frequency'])</TD>
            <TD>&nbsp;</TD>
        </TR>
</TABLE>
#end def

## Form for adding or editing a product
#def product($editbox)
#set $fields = $editbox.fields
#if $fields.has_key('productid')
$input($fields['productid'])
#end if
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['vendorid'])</TH>
            <TH>$heading($fields['productno'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['vendorid'])</TD>
            <TD>$input($fields['productno'])</TD>
        </TR>
        <TR>
            <TH colspan="2">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD colspan="2">$input($fields['descr'],'width: 100%;')</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing a container
#def container($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['name'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['name'])</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing routers in containers
#def ric($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['container'])</TH>
            <TH>$heading($fields['routers'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['container'])</TD>
            <TD>$input($fields['routers'])</TD>
        </TR>
    </TABLE>
#end def




## Form for adding or editing a vendor
#def vendor($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['vendorid'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['vendorid'])</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing a user category
#def usage($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['usageid'])</TH>
            <TH>$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['usageid'])</TD>
            <TD>$input($fields['descr'])</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing a service
#def service($editbox)
#set $fields = $editbox.fields
    <P>$editbox.help</P>
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['netboxid'])</TH>
            <TH>$heading($fields['handler'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['netboxid'])</TD>
            <TD>$input($fields['handler'])</TD>
        </TR>
    </TABLE>
$hiddenfields($editbox.hiddenFields)
#end def

## Form for adding or editing service properties
#def serviceproperties($editbox)
#if $editbox.show
#set $args = $editbox.args
#set $optargs = $editbox.optargs
    <P>$editbox.title</P>
    <TABLE class="header-active">
#if len($editbox.args)
            <TR>
                <TH colspan="2">Required</TH>
            </TR>
#for $field,$content in $args.items()
            <TR>
                <TD>$field</TD>
                <TD>$input($args[$field])</TD>
            </TR>
#end for
#end for
#end if
#if len($editbox.optargs)
            <TR>
                <TH colspan="2">Optional</TH>
            </TR>
#for $field,$content in $optargs.items()
            <TR>
                <TD>$field</TD>
                <TD>$input($optargs[$field])</TD>
            </TR>
#end for
#end if
    </TABLE>
#end if
#end def

## Form for prefix editing
#def prefix($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH colspan="2">$heading($fields['netaddr'])</TH>
            <TH>$heading($fields['vlan.description'])</TH>
        </TR>
        <TR>
            <TD colspan="2">$input($fields['netaddr'])</TD>
            <TD>$input($fields['vlan.description'],style='width: 100%;')</TD>
        </TR>
        <TR>
            <TH colspan="2">$heading($fields['vlan.netident'])</TH>
            <TH>$heading($fields['vlan.orgid'])</TH>
        </TR>
        <TR>
            <TD colspan="2">$input($fields['vlan.netident'])</TD>
            <TD>$input($fields['vlan.orgid'])</TD>
        </TR>
        <TR>
            <TH>$heading($fields['vlan.nettype'])</TH>
            <TH>$heading($fields['vlan.vlan'])</TH>
            <TH>$heading($fields['vlan.usageid'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['vlan.nettype'])</TD>
            <TD>$input($fields['vlan.vlan'])</TD>
            <TD>$input($fields['vlan.usageid'],style='width: 100%')</TD>
        </TR>
    </TABLE>
#end def

## Form for vlan editing
#def $vlan($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH colspan="2">$heading($fields['netident'])</TH>
            <TH>$heading($fields['orgid'])</TH>
        </TR>
        <TR>
            <TD colspan="2">$input($fields['netident'])</TD>
            <TD>$input($fields['orgid'])</TD>
        </TR>
        <TR>
            <TH>$heading($fields['nettype'])</TH>
            <TH>$heading($fields['vlan'])</TH>
            <TH>$heading($fields['usageid'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['nettype'])</TD>
            <TD>$input($fields['vlan'])</TD>
            <TD>$input($fields['usageid'],style='width: 100%')</TD>
        </TR>
        <TR>
            <TH colspan="3">$heading($fields['description'])</TH>
        </TR>
        <TR>
            <TD colspan="3">$input($fields['description'],style='width: 100%;')</TD>
        </TR>
    </TABLE>
#end def

## Form for adding or editing a subcategory
#def subcat($editbox)
#set $fields = $editbox.fields
    <TABLE class="header-active">
        <TR>
            <TH>$heading($fields['subcatid'])</TH>
            <TH colspan="2">$heading($fields['catid'])</TH>
        </TR>
        <TR>
            <TD>$input($fields['subcatid'])</TD>
            <TD colspan="2">$input($fields['catid'])</TD>
        </TR>
        <TR>
            <TH colspan="3">$heading($fields['descr'])</TH>
        </TR>
        <TR>
            <TD colspan="3">$input($fields['descr'],'width: 100%;')</TD>
        </TR>
    </TABLE>
#end def

## Form for showing a message and adding hidden controls
#def hiddenormessage($editbox)
<p>$editbox.message</p>
<!-- def hiddenormessage ->
$hiddenfields($editbox.hiddenFields)
#end def

## Form for bulk import
#def bulk($editbox)
#set $fields = $editbox.fields
    <P>$editbox.help</P>
    <TABLE class="header-active">
        <TR>
            <TH align="left">Import</TH>
            <TD>$input($fields['table'],'width: 60%;')</TD>
        </TR>
        <TR>
            <TH align="left">Separator</TH>
            <TD>$input($fields['separator'],'width: 60%;')</TD>
        </TR>
        <TR>
            <TH align="left">Import from file</TH>
            <TD>$input($fields['file'],'width: 60%;')</TD>
        </TR>
        <TR>
            <TH align="left">Import from text</TH>
            <TD>$input($fields['textarea'])</TD>
        </TR>
    </TABLE>
#end def

## Form to write out all hidden input fields
#def hiddenfields($fieldlist)
#for $field in $fieldlist.values()
$input($field)
#end for
#end def

## Displays headings in forms, marks required fields
#def heading($control)
## REQ_TRUE = 1 (from editdb.py header)
#if $control[1] == 1
$control[2]&nbsp;<span style="color: #ff0000">*</span>
#else
$control[2]
#end if
#end def

## Form to display all input fields
#def input($control,$style='')
#if $control[0].disabled
#set $disabled = 'disabled'
#else
#set $disabled = ''
#end if
#set $control = $control[0]
#if $control.type == 'text'
#if $control.maxlength
<INPUT $disabled type="text" style="$style" size="$control.size" maxlength="$control.maxlength" name="$control.name" value="$control.value">
#else
<INPUT $disabled type="text" style="$style" size="$control.size" name="$control.name" value="$control.value">
#end if
#elif $control.type == 'select'
<SELECT $disabled name="$control.name" style="$style" $control.attribs>
#for $id,$option in $control.options
#if $id == $control.value
    <OPTION value="$id" selected>$option</OPTION>
#else
    <OPTION value="$id">$option</OPTION>
#end if
#end for
</SELECT>
#elif $control.type == 'multipleselect'
<SELECT multiple name="$control.name" style="$style">
#for $id,$option in $control.options
#if $control.value.count($id)
    <OPTION value="$id" selected>$option</OPTION>
#else
    <OPTION value="$id">$option</OPTION>
#end if
#end for
</SELECT>
#elif $control.type == 'file'
    <INPUT type="file" style="$style" name="$control.name" value="$control.value">
#elif $control.type == 'textarea'
    <TEXTAREA name="$control.name" style="$style" rows="$control.rows" cols="$control.cols">$control.value</TEXTAREA>
#elif $control.type == 'checkbox'
#if $control.value == '1'
## VALUE is hardcoded to 1, which is good for boolean fields in the db
    <INPUT type="checkbox" style="$style" name="$control.name" value="1" checked>
#else
    <INPUT type="checkbox" style="$style" name="$control.name" value="1">
#end if
#elif $control.type == 'hidden'
    <INPUT type="hidden" name="$control.name" value="$control.value">
#elif $control.type == 'treeselect'
#set $ts = selectTreeTemplate()
#if $control.treeselect
    $ts.renderLayoutBox($control.treeselect)
#end if
#else
Undefined control
#end if
#end def
