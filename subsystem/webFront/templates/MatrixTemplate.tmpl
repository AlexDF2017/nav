#encoding=UTF-8

#extends nav.web.templates.MainTemplate

#block content
<h1>Tabular view of $start_net.strCompressed()</h1>
<p>This table shows how the subnets with masklengths from $start_net.prefixlen#slurp
 to $end_net.prefixlen are utilized.</p>

<table style="border: 1px solid black; font-size: 0.8em;">
<tr>
<td style="text-align:center;">$start_net.prefixlen ... $sub($end_net.prefixlen,$bits_in_matrix)</td>
#for $heading in $column_headings
	<th>$heading</th>
#end for
</tr>
#set $nodes = $sort_nets_by_address($tree_nets.keys)
#for $net in $nodes
	<tr>
	<td>$net.strCompressed()</td>
	<td colspan="16">&nbsp;</td>
	</tr>
	$writeSubnets($tree_nets[$net],1)
#end for

</table>
#end block

#def $writeSubnets($net,$depth)
	#set $nodes = $sort_nets_by_address($net.keys)
	#for $subnet in $nodes
		#if $matrix_nets.has_key($subnet)
			<tr>
			<td>$printDepth($depth) $netlink($subnet)</td>
			#set $host_nybbles_map = $getNybblesMap($matrix_nets[$subnet].keys)
			#set $next_header_idx = -1
			#for $i in $column_headings
				#if $column_headings.index($i) < $next_header_idx
					#continue
				#end if

				#set $i = $i.lower()
				#if $host_nybbles_map.has_key($i)
					#set $meta = $metainfo($host_nybbles_map[$i])
					#set $ip = $host_nybbles_map[$i]
					<td colspan="$colspan($ip)" style="background-color:$loadColor($meta.usage_percent,$meta.net_type); text-align:center;">#slurp
					$matrixlink($i,$ip)#slurp
					</td>

					#set $next_header_idx = $column_headings.index($i.upper)+$int($colspan($ip))
				#else
					<td colspan="1">&nbsp;</td>
				#endif
			#end for
			</tr>
		#else
			#set $meta = $metainfo($subnet)
			<tr>
			<td>$printDepth($depth)$netlink($subnet,True)</td>
			<td colspan="16">
			&nbsp;
			</td>
			</tr>
			##<tr>
			##<td>$printDepth($depth)$netlink($subnet)</td>
			##<td colspan="16" style="background-color:$loadColor($meta.usage_percent,$meta.net_type); text-align:center;">#slurp
			##0::/$subnet.prefixlen#slurp
			##</td>
			##</tr>
			$writeSubnets($net[$subnet],$depth+1)
		#end if
	#end for
#end def

#def $printDepth($depth)
	#for $i in $range(0,$depth)
		&nbsp;#slurp
	#end for
#end def

#def $netlink($ip,$append_term_and_prefix=False)
	##Returns a link to a site that will list all sub
	#set $nip = $metainfo($ip).getTreeNet()
	#if $append_term_and_prefix
		<a href="/report/matrix?scope=$nip::/$ip.prefixlen">$nip::/$ip.prefixlen</a>
	#else
		<a href="/report/prefix?host(netaddr)=$nip%&op_host(netaddr)=like">$nip</a>
	#end if
#end def	

#def $matrixlink($nybble,$ip)
	<a href="/report/prefix?prefixid=$metainfo($ip).prefixid">$nybble::/$ip.prefixlen</a>
#end def

#def $colspan($ip)
	#import math
	$int($math.pow(2,$end_net.prefixlen-$ip.prefixlen))#slurp
#end def

#def $loadColor($percent,$nettype)
	#if $nettype=="static" or $nettype=="scope" or $nettype=="reserved"
		#if $color_configuration.extras.has_key("other")
			$color_configuration.extras["other"]#slurp
		#end if

	#elif $nettype=="large"
		#if $color_configuration.extras.has_key("large")
			$color_configuration.extras["large"]#slurp
		#end if

	#else
		#set $lims = $color_configuration.limits
		#set $limkeys = $color_configuration.limits.keys
		#silent $limkeys.sort()
		#silent $limkeys.reverse()
		#for $limit in $limkeys
			#if $percent>=int($limit)
				$lims[$limit]
				#break
			#end if
		#end for
	#end if
#end def

#block additionalCSS
<link rel="stylesheet" type="text/css" href="/style/MatrixTemplate.css" />
#end block
