#encoding=UTF-8
#extends nav.web.templates.MainTemplate

<h1>Tabular view of $network</h1>
<p>This table shows how the subnets are utilized.</p>

<table style="border: 1px solid black; font-size: 0.8em;">
<tr>
<td>&nbsp;</td>
#block headings
#for $heading in $column_heading
	<th>$heading</th>
#end for
#end block
</tr>
$extract_matrix($subnet,0)
</table>

#def $printDepth($depth)
	#for $i in $range(0,$depth)
		&nbsp;#slurp
	#end for
#end def

#def $netlink($ip,$removeLastNetOctets=True)
	#if $removeLastNetOctets
		#set $nip = $metainfo($ip).extractNetIp()
		<a href="/report/prefix?host(netaddr)=$nip:%&op_host(netaddr)=like">$nip</a>
	#else
		<a href="/report/prefix?prefixid=$metainfo($ip).prefixid">$str(ip.net())</a>
	#end if
#end def	

#def $matrixlink($ip)
	<a href="/report/prefix?prefixid=$metainfo($ip).prefixid">$metainfo($ip).extractNetIp()</a>
#end def

#def $colspan($ip)
	#import math
	$math.pow(2,($end_net.prefixlen()-$ip.prefixlen()))
#end def

#block extract_matrix
#def $extract_matrix($subnet,$depth)
	#set $keys = $sort_nets_by_address($subnet.keys())
	#set $lastnet = None
	#for $net in $keys
		#if $matrix_nets.has_key($net)
			#if $lastnet = None
				#set $lastnet = $net
			#end if

			#set $diff = $net_diff($net,$lastnet)
			#if $len($diff) > 1
				#if $len($diff) > $max_diff_before_dots
					...
				#else
					#for $ip in $diff
						<tr>
						<td>$printDepth() $netlink($ip,False)</td>
						</tr>
					#end for
				#end if
				#continue
			#end if

			#if $has_too_small_nets($net)
				#set $cols= 2**$bits_in_matrix
				<tr>
				<td colspan="$cols" style="text-align:center;background-color:$load_color(0,'large')">Many small subnets</td>
				</tr>
			#else
				<tr>
				#for $ip in $sort_nets_by_address($matrix_nets[$net])
					<td>$netlink($net)</td>
					<td colspan="$colspan(net)" style="background-color:$load_color($netype($net),$metainfo($net).percent); text-align:center;">
					$ip.prefixlen() $metainfo($ip).percent
					</td>
				#end for
				</tr>
			#end if
		#else
			<tr>
			<td>
			$printDepth() $netlink($net,False)
			</td>
			</tr>
			$extract_matrix($subnet[$net],depth+1)
		#end if
	#end for
#end def

#end block
