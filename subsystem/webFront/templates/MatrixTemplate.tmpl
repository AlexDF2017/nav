#encoding=UTF-8
#extends nav.web.templates.MainTemplate

#block content
<h1>Tabular view of $start_net.strCompressed()</h1>
<p>This table shows how the subnets are utilized.</p>

<table style="border: 1px solid black; font-size: 0.8em;">
<tr>
<td>&nbsp;</td>
#for $heading in $column_headings
	<th>$heading</th>
#end for
</tr>
#set $nodes = $sort_nets_by_address($tree_nets.keys)
#for $net in $nodes
	<tr>
	<td>$net.strCompressed()</td>
	<td colspan="8">&nbsp;</td>
	</tr>
	$writeSubnets($tree_nets[$net],1)
#end for

</table>
#end block

#def $writeSubnets($net,$depth)
	#set $nodes = $sort_nets_by_address($net.keys)
	#for $subnet in $nodes
		#if $matrix_nets.has_key($subnet)
			<tr>
			<td>$printDepth($depth) $netlink($subnet)</td>
			#set $host_nybbles_map = $getNybblesMap($matrix_nets[$subnet].keys)
			#for $i in $column_headings
				#set $i = $i.lower()
				#if $host_nybbles_map.has_key($i)
					#set $meta = $metainfo($host_nybbles_map[$i])
					#set $ip = $host_nybbles_map[$i]
					<td colspan="$colspan($ip)" style="background-color:$loadColor($meta.usage_percent,$meta.net_type); text-align:center;">#slurp
					$matrixlink($ip)#slurp
					</td>
				#else
					<td colspan="1">&nbsp;</td>
				#endif
			#end for
			</tr>
		#else
			<tr>
			<td>$$subnet.strCompressed() aba</td>
			<td colspan="8">&nbsp;</td>
			</tr>
			$writeSubnets($net[$subnet])
		#end if
	#end for
#end def

#def $printDepth($depth)
	#for $i in $range(0,$depth)
		&nbsp;#slurp
	#end for
#end def

#def $netlink($ip)
	##Returns a link to a site that will list all sub
	#set $nip = $metainfo($ip).getTreeNet()
	<a href="/report/prefix?host(netaddr)=$nip:%&op_host(netaddr)=like">$nip</a>
#end def	

#def $matrixlink($ip)
	<a href="/report/prefix?prefixid=$metainfo($ip).prefixid">$ip.prefixlen</a>
#end def

#def $colspan($ip)
	#import math
	$int($math.pow(2,$end_net.prefixlen-$ip.prefixlen))#slurp
#end def

#def $loadColor($percent,$nettype)
	#if $nettype=="static" or $nettype=="scope" or $nettype=="reserved"
		#if $color_configuration.extras.has_key("other")
			$color_configuration.extras["other"]#slurp
		#end if

	#elif $nettype=="large"
		#if $color_configuration.extras.has_key("large")
			$color_configuration.extras["large"]#slurp
		#end if

	#else
		#set $lims = $color_configuration.limits
		#set $limkeys = $color_configuration.limits.keys
		#silent $limkeys.sort()
		#silent $limkeys.reverse()
		#for $limit in $limkeys
			#if $percent>=int($limit)
				#silent $lims[$limit]
				#break
			#end if
		#end for
	#end if
#end def
