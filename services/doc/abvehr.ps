%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: abvehr.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o abveht.ps abvehr.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.03:1707
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (abvehr.dvi)
@start
%DVIPSBitmapFont: Fa cmti10 10.95 9
/Fa 9 119 df<49B812F8A390260003FEC7121F18074B14031801F000F014075DA3140F
5D19E0A2141F4B1338A2EF7801023F027013C04B91C7FCA217F0027F5CED80011603160F
91B65AA3ED001F49EC07805CA3010392C8FC5CF003804C13070107020E14005C93C75A18
0E010F161E4A151C183CA2011F5E5C60A2013F15014A4A5A1707017F150F4D5A4A147F01
FF913807FF80B9FCA295C7FC3D3E7BBD3E>69 D<EEFFC0030713F892383F80FE9238FC00
3FDA03F06D7E4A486D7EDA1FC06D7E4AC76C7E027E814A6E7E495A01036F7E495A495A49
4881133F4A81137F49C91380A2485A12035B000717FF5B120FA25B121F190048485DA448
484B5AA36017075B6000FF160F60171F60127F4D5A60177F4DC7FC5F003F903803E00191
390FF003FCDA3C185B3B1FC0700C07F002E0495A000F496C485A01E04A5AD807F14AC8FC
0003018013FCD801F9EB07F8D800FD14E090397FC01F80903A1FE07E0003903807FFFE01
00018E5BDA000E1306030F130EA24B131E5FEE807CEEC1F816FF5FA25F5F8194C8FC6F5A
ED01F8395273BF46>81 D<92391FE00380ED7FFC913A01FFFE0700913907F01F8F91390F
C007DF4AC66CB4FC023E6D5A4A130014FC495A4948147CA2495AA2010F15785CA3011F15
70A46E91C7FCA2808014FE90380FFFE015FC6DEBFF8016E06D806D806D6C7F141F02037F
EC003FED07FF1501A281A282A212075A167E120EA2001E15FE5EA25E003E14015E003F14
034B5A486C5C150F6D495A6D49C8FCD8F9F0137C39F8FE01F839F03FFFF0D8E00F13C026
C001FEC9FC314279BF33>83 D<147E49B47E903907C1C38090391F80EFC090383F00FF01
7E137F4914804848133F485AA248481400120F5B001F5C157E485AA215FE007F5C90C7FC
A21401485C5AA21403EDF0385AA21407EDE078020F1370127C021F13F0007E013F13E000
3E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D800FC133E252977A72E>97
D<EC3F80903801FFE0903807E0F890381F803CEB3E0001FC131E485A485A12074848133E
49133C121F4848137C15F8EC03F0397F000FE0ECFF809038FFFC00B512C048C8FCA45AA6
1506150E151E007C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF038
007F801F2976A72A>101 D<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC
001E011C137C001C49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA00
7EA2150101FE5C5BA2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80
E05B1681EE01C0120F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A7
33>110 D<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA291C7FCA2007FB5
1280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2
121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C48C7FCEA07FCEA
01F0193A78B81E>116 D<137C48B4141C26038F80137EEA0707000E7F001E15FE121CD8
3C0F5C12381501EA781F007001805BA2D8F03F1303140000005D5B017E1307A201FE5C5B
150F1201495CA2151F0003EDC1C0491481A2153F1683EE0380A2ED7F07000102FF13005C
01F8EBDF0F00009038079F0E90397C0F0F1C90391FFC07F8903907F001F02A2979A731>
I<017CEB01C048B4EB07F038038F80EA0707000E01C013F8121E001C1403EA3C0F0038EC
01F0A2D8781F130000705BA2EAF03F91C712E012005B017E130116C013FE5B1503000115
805BA2ED07001203495B150EA25DA25D1578000114706D5B0000495A6D485AD97E0FC7FC
EB1FFEEB03F0252979A72A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 10.95 45
/Fb 45 122 df<EA03F8EA0FFEEA1C0738380380387001C038E000E0A6387001C0383803
80381C0700EA0FFEEA03F8131068C044>23 D<1660A216C01501168015031600903801FE
0790380FFFC690383F03FCEB7C00D801F0133E48487F4848EB3F80157F4848EB67C0001F
ECE7E090C712C348010113F015834890380303F8007E14011406A200FE010C13FC141C14
18143814301470146014E014C0267E018013F8A2EB0300007F1403D83F0614F0130ED81F
0C14E0D80F9CEB07C01398D807F8EB0F806C48EB1F000001143E6C6C5B9038FF03F09038
CFFFC0260181FEC7FCD80380C8FC90C9FC5A1206120E120C5AA226397DAF2D>28
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
120E5A1218123812300B1C798919>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A
798919>46 D<ED0180ED03C01507A21680150FA216005DA2151E153EA2153C157CA21578
15F8A25D1401A25D1403A25D1407A25D140FA24AC7FCA2141E143EA2143C147CA2147814
F8A25C1301A25C1303A25C1307A25C130FA291C8FC5BA2131E133EA25BA2137813F8A25B
1201A25B1203A25B1207A25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A
1260225B7BC32D>I<EB01FE90380FFFC090383F03F090387C00F849137C48487F48487F
4848EB0F80A2000F15C04848EB07E0A3003F15F0A290C712034815F8A64815FCB3A26C15
F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C6CEB1F80000315006C6C133E6C6C5B01
7C5B90383F03F090380FFFC0D901FEC7FC263F7DBC2D>I<EB01C013031307131F137FEA
07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78BC2D>I<EB07FC90383FFF80
90B512E03903F01FF83907C007FC390F0001FE001E6D7E001C1580003CEC7FC05AED3FE0
1270B4FC6DEB1FF07FA56C5A6CC7FC120CC813E0153FA216C0157F168015FF16004A5A5D
4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A495A495A495A49C71270133E133C5B4914
E0485A485A485A48C7120148B6FCA25A4815C0B7FCA3243D7CBC2D>I<EB07FC90383FFF
809038F80FE03901E003F839078001FCD80F007F000E6D7E001E1580D81F80137F486C14
C07FA27F5BA2121F6C5AC8138015FF1600A24A5AA24A5A5DEC07E04A5A023FC7FCEB1FFC
ECFF809038000FE0EC07F86E7E6E7E6E7E1680ED7FC0A216E0153FA216F0A2120C123F48
7E487EA316E0A249137F6CC713C01278EDFF807E6C4913006C495A3907C007FC3903F80F
F0C6B55A013F1380D907F8C7FC243F7CBC2D>I<150E151E153EA2157EA215FE1401A214
03EC077E1406140E141CA214381470A214E0EB01C0A2EB0380EB0700A2130E5BA25B5BA2
5B5B1201485A90C7FC5A120E120C121C5AA25A5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E
7EBD2D>I<00061403D80780131F01F813FE90B5FC5D5D5D15C092C7FC14FCEB3FE090C9
FCACEB01FE90380FFF8090383E03E090387001F8496C7E49137E497F90C713800006141F
C813C0A216E0150FA316F0A3120C127F7F12FFA416E090C7121F12FC007015C012780038
EC3F80123C6CEC7F00001F14FE6C6C485A6C6C485A3903F80FE0C6B55A013F90C7FCEB07
F8243F7CBC2D>I<EC1FE0ECFFF8903803F03E90380FC00F90391F000780133E017EEB1F
C049133F4848137F12035B12074848EB3F80ED1F00001F91C7FC5BA2123FA3485AA214FE
903887FF8039FF8F07E090389C01F09038B800FC01B0137E13F0497F16804914C0A2ED1F
E0A34914F0A5127FA6123F6D14E0A2121FED3FC0A26C6C1480A20007EC7F006C6C137E6C
6C5B6C6C485A90387E07F06DB45A010F1380D903FCC7FC243F7CBC2D>I<1238123C123F
90B612FCA316F85A16F016E00078C712010070EC03C0ED078016005D48141E151C153C5D
C8127015F04A5A5D14034A5A92C7FC5C141EA25CA2147C147814F8A213015C1303A31307
A3130F5CA2131FA6133FAA6D5A0107C8FC26407BBD2D>I<EB03FC90381FFF8090387C07
E09038F001F83901E0007C48487F48487F48C7FCED0F80121E16C0003E1407A4123FA26D
EB0F807F6C6C131F6D140001FC133E6C6C5B9038FF80786C6D5A6CEBF3E06CEBFF806C91
C7FC133F6D13C06D7F013F13F801787F48486C7E3903E01FFF48486C1380260F800313C0
48487E489038007FE0003E143F007E141F007CEC0FF01507481403A31501A46C15E0007C
1403A2007E15C06C14076CEC0F806DEB1F006C6C133ED807F05B3901FC03F86CB512E001
1F1380D903FCC7FC243F7CBC2D>I<EB03FCEB1FFF90387E07C09038FC03F048486C7E48
486C7E4848137C000F147E4848137F81003F15805B007F15C0A2151F12FF16E0A516F0A5
127F153FA36C7EA2001F147F120F6C6C13FF6D13DF000313013900F8039F90387E0F1FD9
1FFE13E0EB07F090C7FCA2ED3FC0A41680157FD80F801400487E486C13FEA24A5A5D4948
5AEB8007391E000FE0001F495A260FC07FC7FC3803FFFE6C13F838003FC0243F7CBC2D>
I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA
1E000A2779A619>I<B712FCEEFF8017E000019039C0001FF86C6C48EB03FEEE00FF717E
717EEF0FE084717E717E170184717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0
A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B8
5A178004FCC8FC3C3E7DBD45>68 D<B912E0A300019038C000016C6C48EB001FEF0FF017
03A217011700A31870A418381638A41800A21678A216F81501150791B5FCA3EC80071501
15001678A21638A2180EA3181C93C7FCA4183C1838A21878A318F8EF01F0A21707170F17
3F48486CEB03FFB912E0A3373E7DBD3E>I<B91280A300019038C000036C6C48EB007FEF
1FC0170F1707A21703A31701A4EF00E0A21638A31800A31678A216F81501150791B5FCA3
EC8007150115001678A21638A693C8FCAF3801FFE0B612F0A3333E7DBD3B>I<B6D8C01F
B512F8A3000101E0C7383FFC0026007F80EC0FF0B3A691B7FCA30280C7120FB3A92601FF
E0EC3FFCB6D8C01FB512F8A33D3E7DBD44>72 D<011FB512FCA3D9000713006E5A1401B3
B3A6123FEA7F80EAFFC0A44A5A1380D87F005B007C130700385C003C495A6C495A6C495A
2603E07EC7FC3800FFF8EB3FC026407CBD2F>74 D<B612F8A3000101E0C9FC38007F80B3
B0EF0380A517071800A45FA35FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>76
D<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717EA2717E
A284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F0913880
01FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0057F13
1E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F407DBD
43>82 D<D907FC131890391FFF8038017FEBE0783901FC03F83A03F0007CF8D807C0133F
4848130F001F140748C7FC003E1403007E1401A2007C140012FC1678A46C1538A27EA26C
6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E00107
14F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163FA27E
A3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF07F80
3F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<EB0FF8EBFFFE3903F01F80
39078007E0000F6D7E9038E001F8D81FF07F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103
B5FC90381FF87FEB7F803801FC00EA07F8EA0FE0485A485AA248C7FCEE038012FEA315FF
A3007F5BEC03BF3B3F80071F8700261FC00E13CF3A07F03C0FFE3A01FFF807FC3A003FC0
01F0292A7DA82D>97 D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E0
9039FDE001F09039FFC000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717
F8AA17F0A2160FA217E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003
F09039E0780FC09026C03FFFC7FCC7EA07F82D407EBE33>I<ED01FC15FFA31507150315
01B114FF010713E190381F80F990387E003D49131FD803F81307485A4913034848130112
1F123F5B127FA290C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C
497ED8007C017913F890383F01F190380FFFC1903A01FE01FC002D407DBE33>100
D<EB01FE90380FFFC090383F03F09038FC01F848486C7E4848137E48487F000F15804913
1F001F15C04848130FA2127F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C
7E1501000F15C06C6C13036DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0
010090C7FC232A7EA828>I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1
EB3F811401137FEC00FE01FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407E
BF1C>I<167C903903F801FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B
07E000FC0600000F6EC7FC49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901
F803E03903FE0FC026071FFFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C
6E7E6C15E06C810003813A0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C
153E007E157E6C5D6C6C495A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC0103
13C0293D7EA82D>I<EA01FC12FFA3120712031201B1EC01FE913807FFC091381E07E091
387803F09138E001F8D9FDC07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F
13FCA32E3F7DBE33>I<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA312
0712031201B3AC487EB512F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00
781400AC147FEB7FFFA313017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F
01387C03F0381E07C0380FFF803801FC00185185BD1C>I<EA01FC12FFA3120712031201
B292B51280A392383FFC0016E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F
4A7E13FD9038FFDFC0EC9FE0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F
7EA282486C14FEB539F07FFFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1
487EB512F8A3153F7DBE1A>I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F
03F0913B7803F03C01F80007903BE001F87000FC2603F9C06D487F000101805C01FBD900
FF147F91C75B13FF4992C7FCA2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA34728
7DA74C>I<3901F801FE00FF903807FFC091381E07E091387803F000079038E001F82603
F9C07F0001138001FB6D7E91C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA7
33>I<14FF010713E090381F81F890387E007E01F8131F4848EB0F804848EB07C04848EB
03E0000F15F04848EB01F8A2003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3
001F15F86C6CEB03F0A26C6CEB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC
90380FFFF0010090C7FC282A7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039
FDE003F03A07FFC001FC6C496C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07
F8AAEE0FF0A4EE1FE0A2EE3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039
FC780FC0DA3FFFC7FCEC07F891C9FCAD487EB512F8A32D3A7EA733>I<3901F807E000FF
EB1FF8EC787CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5
487EB512FEA31F287EA724>114 D<90383FC0603901FFF8E03807C03F381F000F003E13
07003C1303127C0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F
6C1480000114C0D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F0
7E14016C14E06CEB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<13
1CA6133CA4137CA213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912
009038FE01C0A2EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14
FE00FF147FA3000714030003140100011400B3A51501A31503120015076DEB06FF017E01
0E13806D4913FC90381FC078903807FFE00100903880FE002E297DA733>I<B539E00FFF
E0A32707FE000313006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC0
07011F91C7FCA290380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF0
01005BA2EC7FC0A36E5AA26EC8FCA3140E2B287EA630>I<B539E00FFFE0A32707FE0003
13006C48EB01FC6F5A00015D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E
5A010F130EA26D6C5AA2ECF83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA3
6EC8FCA2140EA2141E141C143C1438A2147800181370127EB45BA2495AA248485AD87E07
C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA630>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 382 3294 a
 currentpoint currentpoint translate 0.5 0.5 scale neg exch neg exch
translate
 382 3294 a @beginspecial 0 @llx 0
@lly 727 @urx 679 @ury 7270 @rwi @setspecial
%%BeginDocument: abvehr.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/magnun/abvher
%%Creator: Dia v0.88.1
%%CreationDate: Mon Jun  3 16:55:47 2002
%%For: magnun
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 727 679
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-3.885968 -24.033944 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 5.710800 17.250000 m 5.710800 19.250000 l 10.889200 19.250000 l 10.889200 17.250000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 5.710800 17.250000 m 5.710800 19.250000 l 10.889200 19.250000 l 10.889200 17.250000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(Jobqueue) dup sw 2 div 8.300000 ex sub 18.484483 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 5.568400 9.950000 m 5.568400 11.950000 l 11.231600 11.950000 l 11.231600 9.950000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 5.568400 9.950000 m 5.568400 11.950000 l 11.231600 11.950000 l 11.231600 9.950000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(Scheduler) dup sw 2 div 8.400000 ex sub 11.184483 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 5.526000 4.200000 m 5.526000 6.200000 l 11.674000 6.200000 l 11.674000 4.200000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 5.526000 4.200000 m 5.526000 6.200000 l 11.674000 6.200000 l 11.674000 4.200000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(Threadpool) dup sw 2 div 8.600000 ex sub 5.434483 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 21.150000 7.050000 2.650000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 21.150000 7.050000 2.650000 1.000000 0 360 ellipse cp s
/Courier-latin1 ff 0.800000 scf sf
(Job) dup sw 2 div 21.150000 ex sub 7.284483 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 21.042379 12.764577 2.662412 1.035423 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 21.042379 12.764577 2.662412 1.035423 0 360 ellipse cp s
/Courier-latin1 ff 0.800000 scf sf
(State) dup sw 2 div 21.042379 ex sub 12.999060 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 18.476000 17.800000 m 18.476000 19.800000 l 24.624000 19.800000 l 24.624000 17.800000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 18.476000 17.800000 m 18.476000 19.800000 l 24.624000 19.800000 l 24.624000 17.800000 l cp s
/Courier-latin1 ff 0.800000 scf sf
(EventQueue) dup sw 2 div 21.550000 ex sub 19.034483 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.005400 17.250000 m 6.984200 11.950000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 7.387397 12.748394 m 6.984200 11.950000 l 6.587403 12.751594 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 7.387397 12.748394 m 6.984200 11.950000 l 6.587403 12.751594 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 11.231600 10.950000 m 18.500000 7.050000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 17.984190 7.780712 m 18.500000 7.050000 l 17.605944 7.075779 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 17.984190 7.780712 m 18.500000 7.050000 l 17.605944 7.075779 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.063000 6.200000 m 6.984200 9.950000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 6.601095 9.141773 m 6.984200 9.950000 l 7.400919 9.158580 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 6.601095 9.141773 m 6.984200 9.950000 l 7.400919 9.158580 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 20.135889 7.973880 m 20.150000 11.750000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 19.747013 10.951500 m 20.150000 11.750000 l 20.547008 10.948511 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 19.747013 10.951500 m 20.150000 11.750000 l 20.547008 10.948511 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 22.061240 11.807971 m 22.050000 8.100000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 22.452423 8.898784 m 22.050000 8.100000 l 21.652427 8.901209 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 22.452423 8.898784 m 22.050000 8.100000 l 21.652427 8.901209 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 20.023518 13.721183 m 20.013000 17.800000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 19.615064 16.998971 m 20.013000 17.800000 l 20.415062 17.001034 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 19.615064 16.998971 m 20.013000 17.800000 l 20.415062 17.001034 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 22.000000 17.700000 m 22.061240 13.721183 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 22.448881 14.527244 m 22.061240 13.721183 l 21.648976 14.514933 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 22.448881 14.527244 m 22.061240 13.721183 l 21.648976 14.514933 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0 slj
0 slc
0 slj
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 22.126060 1.570326 m 21.436489 1.559363 20.099141 1.789577 20.287206 2.282890 c 20.475269 2.776204 21.373801 2.885825 21.749931 2.743317 c 22.126060 2.600804 21.164840 3.433952 23.003696 3.653202 c 24.842536 3.872453 25.782860 3.521652 25.511211 3.269514 c 25.239562 3.017375 27.120210 3.861490 27.997846 3.379139 c 28.875482 2.896788 27.099314 2.436366 27.475444 2.502141 c 27.851573 2.567916 29.000859 2.480216 28.624729 1.658026 c 28.248599 0.835836 24.863432 1.471663 25.239562 1.351075 c 25.615691 1.230488 24.675367 0.627547 23.505203 0.748135 c 22.335021 0.868724 22.252022 1.087547 22.126645 1.569898 c 22.126060 1.570326 l f
0.000000 0.000000 0.000000 srgb
n 22.126060 1.570326 m 21.436489 1.559363 20.099141 1.789577 20.287206 2.282890 c 20.475269 2.776204 21.373801 2.885825 21.749931 2.743317 c 22.126060 2.600804 21.164840 3.433952 23.003696 3.653202 c 24.842536 3.872453 25.782860 3.521652 25.511211 3.269514 c 25.239562 3.017375 27.120210 3.861490 27.997846 3.379139 c 28.875482 2.896788 27.099314 2.436366 27.475444 2.502141 c 27.851573 2.567916 29.000859 2.480216 28.624729 1.658026 c 28.248599 0.835836 24.863432 1.471663 25.239562 1.351075 c 25.615691 1.230488 24.675367 0.627547 23.505203 0.748135 c 22.335021 0.868724 22.252022 1.087547 22.126645 1.569898 c 22.126060 1.570326 l s
/Courier-latin1 ff 0.800000 scf sf
(Ze World) dup sw 2 div 24.788624 ex sub 2.541684 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 18.701719 6.667317 m 11.674000 5.200000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 12.538866 4.971950 m 11.674000 5.200000 l 12.375360 5.755062 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 12.538866 4.971950 m 11.674000 5.200000 l 12.375360 5.755062 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 21.900000 3.300000 m 21.150000 6.050000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 20.974588 5.172942 m 21.150000 6.050000 l 21.746399 5.383436 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 20.974588 5.172942 m 21.150000 6.050000 l 21.746399 5.383436 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 23.023833 6.342893 m 23.700000 3.750000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 23.885185 4.625047 m 23.700000 3.750000 l 23.111074 4.423176 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 23.885185 4.625047 m 23.700000 3.750000 l 23.111074 4.423176 l cp s
/Courier-latin1 ff 0.800000 scf sf
(1) dup sw 2 div 7.700000 ex sub 21.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(2) dup sw 2 div 7.650000 ex sub 14.950000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
() dup sw 2 div 7.400000 ex sub 21.050000 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 6.950000 21.600000 m 7.005400 19.250000 l s
0 slj
1.000000 1.000000 1.000000 srgb
n 7.386435 20.059205 m 7.005400 19.250000 l 6.586657 20.040351 l f
0.100000 slw
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 7.386435 20.059205 m 7.005400 19.250000 l 6.586657 20.040351 l cp s
1.000000 1.000000 1.000000 srgb
n 6.950000 22.858349 3.014032 1.125595 0 360 ellipse f
0.100000 slw
[1.000000 0.400000 0.200000 0.400000] 0 sd
[1.000000 0.400000 0.200000 0.400000] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 6.950000 22.858349 3.014032 1.125595 0 360 ellipse cp s
/Courier-latin1 ff 0.800000 scf sf
(unknown) dup sw 2 div 6.950000 ex sub 23.092831 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(3) dup sw 2 div 7.800000 ex sub 8.100000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(4) dup sw 2 div 14.800000 ex sub 10.200000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(5) dup sw 2 div 22.600000 ex sub 10.350000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(6) dup sw 2 div 23.900000 ex sub 5.650000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(7) dup sw 2 div 21.100000 ex sub 4.450000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(8) dup sw 2 div 19.700000 ex sub 10.150000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(9) dup sw 2 div 16.150000 ex sub 5.650000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(10) dup sw 2 div 22.650000 ex sub 16.050000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(11) dup sw 2 div 19.250000 ex sub 16.050000 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 382 3294 a
 currentpoint currentpoint translate 1 0.5 div 1 0.5 div scale neg
exch neg exch translate
 382 3294 a 1703 3490 a Fb(Figur)29
b(1:)518 3919 y(1)46 b(Jobb)34 b(blir)e(plassert)h(i)h(jobbk\034en.)g
(Er)g(usikk)m(er)g(p)-11 b(\027)-57 b(a)34 b(h)m(v)m(ordan)g(dette)i
(sk)-5 b(al)609 4032 y(g)s(j\034res.)518 4220 y(2)46
b(Ledig)30 b(tr)-11 b(\027)-57 b(ad)518 4408 y(3)46 b(Hen)m(ter)31
b(jobb)f(med)g(h\034y)m(est)h(prioritet)518 4595 y(4)46
b(Jobb)s(en)29 b(startes)i(i)f(tr)-11 b(\027)-57 b(aden)518
4783 y(5)46 b(Jobb)s(en)29 b(sjekk)m(er)i(tilstand)e(mot)i
Fa(State)p Fb(.)518 4971 y(6)46 b(Sender)29 b(foresp\034rsel)h(mot)h
(serv)m(er/tjeneste)518 5158 y(7)46 b(F)-11 b(\027)-57
b(ar)31 b(resp)s(ons)e(fra)h(serv)m(er/tjeneste)518 5346
y(8)46 b(Rapp)s(orterer)30 b(resultat)g(til)f Fa(State)1854
5652 y Fb(1)p eop
%%Page: 2 2
2 1 bop 518 548 a Fb(9)46 b(Jobb)s(en)29 b(terminerer,)h(og)h(tr)-11
b(\027)-57 b(aden)30 b(mark)m(eres)h(som)f(ledig)473
736 y(10)46 b(Dersom)31 b(tilstanden)e(er)h(endret)g(opp)s(dateres)g
Fa(EventQueue)473 923 y Fb(11)46 b(Sjekk)30 b(tilstand)f(i)h
Fa(EventQueue)1854 5652 y Fb(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
