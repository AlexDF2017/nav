#!/bin/sh
#
# functions	This file contains functions to be used by most or all
#		shell scripts in the navme/bin/init directory.
#
# Version:	$Id: functions,v 1.3 2002/08/20 09:05:55 mortenv Exp $
#
# Author:	Morten Vold <mortenv@tihlde.org>
# Ideas from:	functions script from Mandrake Linux

daemon() {
    $1
    rc=$?
    if [ $rc = 0 ]; then
	echo -n "Ok"
	return 1
    else
	echo -n "Failed"
	return 0
    fi
}

killproc() {
    pid=`pidofproc $1`
    if [ -z "$pid" ] ; then
	return 0
    fi
    if checkpid $pid 2>&1; then
	kill $pid
	usleep 10000
	if checkpid $pid 2>&1; then
	    echo -n "Unable to terminate the process ($pid)"
	    return 0
	else
	    echo -n "Ok"
	    return 1
	fi
    else
	echo -n "$1 is not running"
	return 1
    fi
}

status() {
    local base=${1##*/}
    pid=`pidof -o $$ -o $PPID -o %PPID -x $1 || pidof -o $$ -o $PPID -o %PPID -x ${base}`
    if [ -n $pid ] ; then
	echo "$1 (pid $pid) is running...";
    else
	echo "$1 does not seem to be running...";
    fi
}

# Check if $pid (could be plural) are running
checkpid() {
	while [ "$1" ]; do
	   [ -d /proc/$1 ] && return 0
	   shift
	done
	return 1
}

pidofproc() {
    local base=${1##*/}

    local pidfile=/usr/local/nav/local/var/run/${base}.pid

    if [ -f $pidfile ] ; then
	local line p pid=
	read line < $pidfile
	for p in $line ; do
	    [ -z "${p//[0-9]/}" -a -d /proc/$p ] && pid="$pid $p"
	done
	if [ -n "${pid-:}" ] ; then
	    echo $pid
	    return 0
	fi
    fi

    pidof -o $$ -o $PPID -o %PPID -x $1 || \
    pidof -o $$ -o $PPID -o %PPID -x ${base}
}
