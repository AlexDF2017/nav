#!/usr/bin/perl -w
############################################################
# Script som lager alle target-filene som Cricket bruker
# ved innsamling av data.
#
# Poenget med scriptet er at det ikke skal bruke SNMP 
# for å spørre enhetene om info, da dette fører til timeout på
# enheter som er nede, og dermed fører til mangelfull innsamling
# av data for Cricket.
#
# Skrevet av:
# John Magne Bredal
# 08-09-2000
#
# Utallige forandringer gjennomført.
############################################################

# $Id: makeconfig,v 1.17 2002/06/19 13:10:01 stain Exp $

use strict;


# Do some magic to find our real paths.
use FindBin qw($Bin);
my $basepath = "$Bin/.."; 
use lib "$Bin/../../lib"; # Common NAVme-libraries
#setter denn ut pge testing
my $path = "$basepath/cricket-config";
my $default = "$basepath/cricket-config_defaults";
my $myself = "makeconfig"; # For use with config-hash



# Load configuration
open(CONFIG, "$basepath/../etc/conf/db.conf") || die "Configfile error";
my %config = map { /\s*(.+?)\s*=\s*(.*?)\s*(\#.*)?$/ && $1 => $2 } 
             grep { !/^(\s*\#|\s+$)/ && /.+=.*/ } <CONFIG>;
close(CONFIG);


# Get a central database connection for our script.
use Pg;
my $dbh = db_connect();



my @ruterliste;
my @switchliste;
# Sletter alt for å forhindre at det blir liggende feil igjen fra
# forrige oppdatering.

print "Sletter tidligere config-filer\n";
`rm -R $path`;

print "Kopierer over default verdier\n";
`cp -R $default $path`;

print "Skriver servere\n";
&Servers;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/[abce-jl-z]*`;
#`rm -R /home/cricket/navme/cricket/cricket-config/servers/[be-z]*`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/kamelon.stud.ntnu.no`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/kamel.stud.ntnu.no`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/kantstein.stud.ntnu.no`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/katla.stud.ntnu.no`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/kiwi.stud.ntnu.no`;
`rm -R /home/cricket/navme/cricket/cricket-config/servers/kobra.stud.ntnu.no`;
`rm -R /home/cricket/cricket-config/Defaults~`;
`rm -R /home/cricket/cricket-config/servers/Default~`;

print "OK!\n";

print "Skriver routere\n";
#&Routers;
print "OK!\n";


print "Skriver ruter-interfaces\n";
#&Routerinterfaces;
print "OK!\n";

print "Skriver switcher\n";
#&Switches;
print "OK!\n";

print "Skriver switcheporter\n";
#&Switchports;
print "OK!\n";

print "Skriver gigarouterinterfaces\n";
#&gigarouterinterfaces;
print "OK!\n";

print "Skriver gigaswitchports\n";
#&gigaswitchports;
print "OK!\n";

print "Kompilerer nytt config-tre\n";
system("/home/cricket/cricket/compile");

print "Ferdig!\n";

########################################
# Henter info om serverne
########################################
sub Servers {


    # Henter typegrupper fra type
    my %typegruppe;
    my $query = "select typeid,typegruppe from type";
    my $getres = &db_select($query,$dbh);
    while (my($typeid,$typegruppe) = $getres->fetchrow) {
	$typegruppe{$typeid} = $typegruppe;
    }

    # Iterates over all the servers in the database marked SNMP, and
    # writes them to various config files.    

    my $oid_win32 = "1.3.6.1.4.1.2021.250.10";
    

    $query = "SELECT Boksid,sysname,ip,typeid,romid,ro,snmpagent FROM boks
    WHERE kat='SRV' AND snmp_major > 0 ORDER BY sysname";
    my $getservers = &db_select($query,$dbh);

    while (my @temp = $getservers->fetchrow) {
      my ($id, $sysname,$ip,$type,$romid,$community,$ostype) = @temp;
            # Avoid severe errors in the database
      if ($sysname) {
          if ($community) {
                my $server = $sysname;
                my $sysname = $sysname . '.ntnu.no';
                mkdir ("$path/servers/$sysname",0775);
                my $fil = "$path/servers/$sysname/$server";
                open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
                
                print FIL "target --default--\n";
                print FIL "\tserver\t=\t$sysname\n";
                print FIL "\tsnmp-community\t=\t$community\n";


                # Finding room description
                $query = "SELECT descr FROM rom WHERE romid='$romid'";
                my $getdesc = &db_select($query,$dbh);
                if (!(my $desc = $getdesc->fetchrow)) {
                    print "Ingen beskrivelse for rom med id=$romid\n";
                    print FIL "\tshort-desc\t=\t\"\"\n";
                } else {
                    print FIL "\tshort-desc\t=\t\"$desc\"\n";
                }
                print FIL "\n";

                print FIL "target \"users\"\n";
		if($ostype eq "win32") {
                  print FIL "\ttarget-type = userswin\n";
		} else {
		  print FIL "\ttarget-type = usersnix\n";
	  	}	
                print FIL "\n";
                
                print FIL "target \"processes\"\n";
                print FIL "\ttarget-type = processes\n";
                print FIL "\n";

                if(not $ostype eq $oid_win32) {
                  print FIL "target \"load\"\n";
                  print FIL "\ttarget-type = loadnix\n";
                  print FIL "\n";
                }


                print FIL "target \"memory\"\n";
                if($ostype eq $oid_win32) {
                  print FIL "\ttarget-type = memwin\n";
                } else { 
                  print FIL "\ttarget-type = memnix\n";
                }
                print FIL "\n";
                

                print FIL "target \"cpu\"\n";
                if($ostype eq $oid_win32) {
                  print FIL "\ttarget-type = cpuwin\n";
                } else { 
                  print FIL "\ttarget-type = cpunix\n";
                }
                print FIL "\n";
                close FIL;
                
                # alle the interfaces
                mkdir ("$path/servers/$sysname/interface",0775);
                $fil = "$path/servers/$sysname/interface/interfaces";
                open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
                $query = "SELECT interf FROM boksinterface WHERE boksid=$id";
                my $getinterfaces = &db_select($query, $dbh);
                print FIL "target --default--\n";
                print FIL "\tserver\t=\t$sysname\n";
                print FIL "\n";
                while (my $interface = $getinterfaces->fetchrow) {
                  print FIL "target \"$interface\"\n";
                  print FIL "\ttarget-type = interface\n";
                  print FIL "\tinst = map(interface-name)\n";
                  print FIL "\tinterface-name = \"$interface\"\n";
                  print FIL "\n";
                }
                close FIL;

                # Then all the disks
		mkdir ("$path/servers/$sysname/disk",0775);
                $fil = "$path/servers/$sysname/disk/disks";
                open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
                $query = "SELECT path FROM boksdisk WHERE boksid=$id";
                my $getpaths = &db_select($query, $dbh);
                print FIL "target --default--\n";
                print FIL "\tserver\t=\t$sysname\n";
                print FIL "\n";
                while (my $mnt = $getpaths->fetchrow) {
	          my $name = $mnt;
		  if($name eq "/") {
			  $name = "root";
		  } else {
			  $name =~ s,/,_,g;
			  $name =~ s/^_//;
		  }
                  print FIL "target \"$name\"\n";
                  print FIL "\ttarget-type = disk\n";
                  print FIL "\tinst = map(mount-point)\n";
                  print FIL "\tmount-point = \"$mnt\"\n";
                  print FIL "\n";
                }
                close FIL;
                
	    }
	}
    }

} # sub Servers


########################################
# Henter info om ruterne
########################################
sub Routers {

    my $fil = "$path/routers/Targets";

    # Henter typegrupper fra type
    my %typegruppe;
    my $sporring = "select typeid,typegruppe from type";
    my $getres = &db_select($sporring,$dbh);
    while (my($typeid,$typegruppe) = $getres->fetchrow) {
	$typegruppe{$typeid} = $typegruppe;
    }

    # Henter alle ruterne fra databasen
    $sporring = "SELECT boksid,sysname,ip,typeid,romid,ro FROM boks WHERE kat='GW' ORDER BY sysname";
    my $getrouters = &db_select($sporring,$dbh);

    # Skriver til filen
    open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
    while (my @temp = $getrouters->fetchrow) {
	my ($id, $sysname,$ip,$type,$romid,$community) = @temp;
	
	# Unngår hvis det er feil i databasen
	if ($sysname) {
	    if ($community) {
		push @ruterliste, [$id, $sysname, $ip, $romid,$community];
		if ($typegruppe{$type}) {
		    print FIL "target $sysname\n";
		    print FIL "\tsnmp-host\t=\t$ip\n";
		    print FIL "\tsnmp-community\t=\t$community\n";
		    print FIL "\ttarget-type\t=\t$typegruppe{$type}\n";

#  		# Unntak for type ruter
#  		if ($type =~ /^(IGS|AGS|C2514|C4000|C4700|C1005|C7200|C7500)$/ ) {
#  		    print FIL "\ttarget-type\t=\t$type-Router\n";
#  		} else {
#  		    print FIL "\ttarget-type\t=\tStandard-Router\n";
#  		}

		    # Må finne beskrivelsen til rommet
		    $sporring = "SELECT descr FROM rom WHERE romid='$romid'";
		    my $getdesc = &db_select($sporring,$dbh);
		    if (!(my $desc = $getdesc->fetchrow)) {
			print "Ingen beskrivelse for rom med id=$romid\n";
			print FIL "\tshort-desc\t=\t\"\"\n\n";
		    } else {
			print FIL "\tshort-desc\t=\t\"$desc\"\n\n";
		    }
		}
	    }
	}
    }

    close FIL;

} # sub Routers

########################################
# Henter info om interfaces, bruker
# ruterlista.
########################################
sub Routerinterfaces {

    my $count = 0;
    for (@ruterliste) {
        my %routerint = ();

	my ($ruterid, $sysname, $ip, $romid, $community) = @$_;

	unless (-e "$path/router-interfaces/$sysname") {
	    mkdir ("$path/router-interfaces/$sysname",0775);
	}

	my $fil = "$path/router-interfaces/$sysname/interfaces";
	open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
	print FIL "target --default--\n";
	print FIL "\trouter = $ip\n";
	print FIL "\tsnmp-community =\t$community\n";

	# Må finne alle interfacene til ruteren
	my $sporring = "SELECT interf,speed,prefiksid FROM gwport WHERE boksid=$ruterid AND speed!=1000 and masterindex is null";

	my $getinterfaces = &db_select($sporring,$dbh);
	
	my @liste;
	my ($interf,$speed,$nettident,$prefiksid);
	while (($interf,$speed,$prefiksid) = $getinterfaces->fetchrow) {
	    unless ($routerint{$interf}) {
		$routerint{$interf}++;
		# Spør etter description hvis det finnes
		if ($prefiksid) {
		    $sporring = "select nettident from prefiks where prefiksid=$prefiksid";
		    my $getident = &db_select($sporring,$dbh);
		    $nettident = $getident->fetchrow;
		    unless ($nettident) {
			$nettident = '"Beskrivelse ikke tilgjengelig"';
		    }
		} else {
		    $nettident = '"Beskrivelse ikke tilgjengelig"';
		}
		# Vil ikke ha med Loopback-interfacene.
		unless ($interf =~ /Loopback/) {
		    push @liste, [$interf,$speed,$nettident];
		}
	    }
	}

	@liste = &sorter(0, @liste);
	my $order = @liste;

	for (@liste) {
	    ($interf,$speed,$nettident) = @$_;
	    $interf =~ s/\//_/g;
	    print FIL "\ntarget $interf\n";
	    $interf =~ s/_/\//g;
	    print FIL "\tinterface-name\t=\t$interf\n";

	    print FIL "\tshort-desc\t=\t$nettident\n";

	    # Setter slik at alle capacities har .00 etter seg
	    if ($speed =~ /\./) {
		print FIL "\tcapacity\t=\t$speed\n";
	    } else {
		print FIL "\tcapacity\t=\t$speed.00\n";
	    }
	    $order--;
	    print FIL "\torder\t\t=\t$order\n\n";
	}

	$count++;
	close FIL;
    }
    print "$count filer laget\n"    

} # sub Routerinterfaces

########################################
# Henter info om alle svitsjene.
# Tar hensyn til at det brukes både
# svitsjer og rutere...
########################################
sub Switches {

    my $fil = "$path/switches/switches";

    # Henter typegrupper fra type
    my %typegruppe;
    my $sporring = "select typeid,typegruppe from type";
    my $getres = &db_select($sporring,$dbh);
    while (my($typeid,$typegruppe) = $getres->fetchrow) {
	$typegruppe{$typeid} = $typegruppe;
    }

    $sporring = "SELECT boksid, ip, sysName,typeid,ro FROM boks WHERE kat='SW' ORDER BY sysName";
    my $getswitches = &db_select($sporring,$dbh);

    open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
    while (my @temp = $getswitches->fetchrow) {
	my ($id,$ip,$sysname, $type, $community) = @temp;
	# Unngår feil i databasen
	if ($sysname) {
#	    $sysname =~ s/\..+//;
	    # Hardkoder unntak for rene svitsjer (SW1100|SW3300|SW9300)
	    if ($type) {
		unless ($type =~ /(SW|C3000|C3100)/) {
		    push @switchliste, [$id, $ip, $sysname, $type, $community];
		    
		    if ($community) {
			print FIL "target $sysname\n";
			print FIL "\tsnmp-community\t=\t$community\n";
			print FIL "\ttarget-type\t=\t$typegruppe{$type}\n\n";
#			print FIL "\ttarget-type\t=\t$type\n";
		    }
		}
	    }
	}
    }
    close FIL;

} # sub Switches


########################################
# Henter info om svitsjeportene.
# Kan bruke ntnulistports for å hente
# info vha. snmp.
########################################
sub Switchports {

    my $count = 0;
    for (@switchliste) {
	my ($id, $ip, $switchnavn, $type, $community) = @$_;

	if ($community) {
	    # Finner alle portene som er på switchen.
	    my $sporring = "SELECT modul,port,portnavn FROM swport WHERE boksid=$id and speed!=1000 and portnavn!='' ORDER BY swportid";
	    my $getports = &db_select($sporring,$dbh);
	    my $antall = $getports->ntuples;

	    # Hvis ingenting returneres skal vi ikke gjøre noe.
            unless ($antall == 0) {
                unless (-e "$path/switch-ports/$switchnavn") {
                    mkdir ("$path/switch-ports/$switchnavn", 0775);
                }
		
		my $fil = "$path/switch-ports/$switchnavn/ports";

		open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
		print FIL "target --default--\n";
		print FIL "\tswitch\t\t=\t$ip\n";

		print FIL "\tsnmp-community\t=\t$community\n\n";

		my @liste;
		
		while (my @temp = $getports->fetchrow) {
		    my ($modul,$port,$portname) = @temp;
		    unless (!$modul or !$port) {
			$port = $modul."_".$port;
			push @liste, [$port,$portname];
		    }
		}

		@liste = &sorter(0,@liste);

		# Order holder styr på rekkefølgen som Cricket
		# viser portene i. Høyt tall = høy prioritet.
		my $order = @liste;
		
		for my $ref (@liste) {
		    my ($port, $portname) = @$ref;
		    $port =~ s/fe/Fa/i;
		    $port =~ s/ge/Gi/i;
		    print FIL "target $port\n";
		    $port =~ s/_/\//;
		    print FIL "\tport-name\t=\t$port\n";
		    $portname =~ s/\s/_/g;
		    print FIL "\tshort-desc\t=\t$portname\n";

		    $order--;
		    print FIL "\torder\t\t=\t$order\n\n";
		}
		$count++;
		close FIL;
	    }
	}
    }
    print "$count filer laget\n"

} # sub Switchports

sub gigarouterinterfaces {

    my $count = 0;
    my $teller = 0;
    # Henter alle interfaces som har giga-kapasitet.
    my $sporring = "SELECT b.ip,b.sysname,g.interf,g.speed,b.ro,g.prefiksid FROM boks b,gwport g WHERE g.speed='1000' and g.boksid=b.boksid and g.masterindex is null ORDER BY sysname";
    my $getinterfaces = &db_select($sporring,$dbh);
    my $antall_interfaces = $getinterfaces->ntuples;
    
    my $tempip = "0";
    my @liste;
    my @liste_bak;
    my($ip,$sysname,$interf,$nettident,$speed,$community,$prefiksid);
    while (($ip,$sysname,$interf,$speed,$community,$prefiksid) = $getinterfaces->fetchrow) {
#	$sysname =~ s/\..+//;
	$teller++;

	if ($prefiksid) {
	    $sporring = "select nettident from prefiks where prefiksid=$prefiksid";
	    my $getident = &db_select($sporring,$dbh);
	    $nettident = $getident->fetchrow;
	    unless ($nettident) {
		$nettident = '"Beskrivelse ikke tilgjengelig"';
	    }
	} else {
	    $nettident = '"Beskrivelse ikke tilgjengelig"';
	}

	if (($ip eq $tempip || $tempip eq "0") && $teller != $antall_interfaces) {
	    push @liste_bak, [$ip,$sysname,$interf,$nettident,$speed,$community];
	    $tempip = $ip;
	} else {
	    
	    if ($teller == $antall_interfaces) {
                push @liste_bak, [$ip,$sysname,$interf,$nettident,$speed,$community];
            }

	    @liste = @liste_bak;
	    @liste_bak = ();
	    push @liste_bak, [$ip,$sysname,$interf,$nettident,$speed,$community];
	    $tempip = $ip;
	    @liste = &sorter (2,@liste);
	    my $order = @liste;

	    for (@liste) {
		($ip,$sysname,$interf,$nettident,$speed,$community) = @$_;

		unless (-e "$path/giga-router-interfaces/$sysname") {
		    mkdir ("$path/giga-router-interfaces/$sysname",0775);
		}

		my $fil = "$path/giga-router-interfaces/$sysname/interfaces";
		if (-e "$path/giga-router-interfaces/$sysname/interfaces") {
		    open (FIL, ">>$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
		} else {
		    open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
		    print FIL "target --default--\n";
		    print FIL "\trouter = $ip\n";
		    print FIL "\tsnmp-community =\t$community\n";
		}

		$interf =~ s/\//_/g;
		print FIL "\ntarget $interf\n";
		$interf =~ s/_/\//g;
		print FIL "\tinterface-name\t=\t$interf\n";
		print FIL "\tshort-desc\t=\t$nettident";
		
		# Setter slik at alle capacities har .00 etter seg
		if ($speed =~ /\./) {
		    print FIL "\tcapacity\t=\t$speed\n";
		} else {
		    print FIL "\tcapacity\t=\t$speed.00\n";
		}

		# Setter sorteringsinfo
		print FIL "\torder\t\t=\t$order\n\n";
		$order--;
	    }
	    close FIL;
	    $count++;
	}
    }
    print "$count filer laget\n"

} # sub gigainterfaces

sub gigaswitchports {

    my %test;
    my $count = 0;

    my $sporring = "select b.boksid,b.ip,b.sysname,b.typeid,s.modul,s.port,s.portnavn,b.ro from swport s,boks b where b.boksid=s.boksid and s.speed='1000' and portnavn!='' order by b.boksid";
    my $getports = &db_select($sporring,$dbh);

    my $tempswitchnavn = "";
    my @liste;
    my @liste_bak;
    my ($id,$ip,$switchnavn,$type,$modul,$port,$portname,$community);
    while (($id,$ip,$switchnavn,$type,$modul,$port,$portname,$community) = $getports->fetchrow) {
#	$switchnavn =~ s/\..+//;
	$port = $modul."_".$port;
	if ($switchnavn eq $tempswitchnavn || $tempswitchnavn eq "") {
	    push @liste_bak, [$id,$ip,$switchnavn,$type,$port,$portname,$community];
	    $tempswitchnavn = $switchnavn;
	} else {
	    @liste = @liste_bak;
	    @liste_bak = ();
	    push @liste_bak, [$id,$ip,$switchnavn,$type,$port,$portname,$community];

	    $tempswitchnavn = $switchnavn;
	    @liste = &sorter(4,@liste);
	    my $order = @liste;

	    for (@liste) {
		($id,$ip,$switchnavn,$type,$port,$portname,$community) = @$_;
		unless ($type =~ /SW\d{4}/ ) {
		    unless ($portname =~ /(udef|undef)/ or !$port) {
			$test{$id}++;

			if ($community) {
			    unless (-e "$path/giga-switch-ports/$switchnavn") {
				mkdir ("$path/giga-switch-ports/$switchnavn", 0775);
			    }
			    
			    my $fil = "$path/giga-switch-ports/$switchnavn/ports";
			    
			    if (-e "$path/giga-switch-ports/$switchnavn/ports") {
				open (FIL, ">>$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
			    } else {
				open (FIL, ">$fil") or die "Kunne ikke åpne $fil for skriving $!\n";
				print FIL "target --default--\n";
				print FIL "\tswitch\t\t=\t$ip\n";
				print FIL "\tsnmp-community\t=\t$community\n\n";
			    }
			    
			    $modul =~ s/fe/Fa/i;
			    $modul =~ s/ge/Gi/i;
			    print FIL "target $port\n";
			    $port =~ s/_/\//;
			    print FIL "\tport-name\t=\t$port\n";
			    $portname =~ s/\s/_/g;
			    print FIL "\tshort-desc\t=\t$portname\n";
			    print FIL "\torder\t\t=\t$order\n\n";		
			    $order--;
			    close FIL;
			}
		    }
		}
	    }
	    $count++;
	}
    }
    print "$count filer laget\n"
}

sub db_connect {
    my $db_user = $config{'script_'.$myself};
    my $db_passwd = $config{'userpw_'.$db_user};
    my $db_db = $config{'db_'.$db_user};
    my $db_host = $config{'dbhost'};
    my $db_port = $config{'dbport'};
    print "host=$db_host port=$db_port dbname=$db_db user=$db_user password=$db_passwd";
    my $conn = Pg::connectdb("host=$db_host port=$db_port dbname=$db_db user=$db_user password=$db_passwd");
    die $conn->errorMessage unless PGRES_CONNECTION_OK eq $conn->status;
    return $conn;
}

sub db_select {
    my $sql = $_[0];
    my $conn = $_[1];
    my $resultat = $conn->exec($sql);
    print "DATABASEFEIL: $sql\n".$conn->errorMessage
        unless ($resultat->resultStatus eq PGRES_TUPLES_OK);
    return $resultat;
}

sub db_execute {
    my $sql = $_[0];
    my $conn = $_[1];
    my $resultat = $conn->exec($sql);
    print "DATABASEFEIL: $sql\n".$conn->errorMessage
        unless ($resultat->resultStatus eq PGRES_COMMAND_OK);
#die er byttet med print

    return $resultat;
}

sub sorter {

    my $indeks = shift;
    my @array = @_;
    my %temp;
    my %eksisterer;

#    print "\n---------- Ny enhet ---------- Sorterer på $indeks\n";

    for (@array) {
	my $key = @$_[$indeks];
	# Det kan finnes flere interfacer som har samme navn, vi vil
	# bare ha et av dem fordi det er tilstrekkelig.
	unless ($eksisterer{$key}) {
	    $eksisterer{$key}++;

	    my @tall = ();
	    if ($key =~ m(/) ) {
		@tall = split /\//, $key;
		$key = "";
		for (@tall) {
		    #print "$_\n";
		    unless (m/\d{2}/) {
			$_ =~ s/(\d)/0$1/;
		    }
		    $key .= $_;
		}
	    } elsif ($key =~ m/_/) {
		@tall = split /_/, $key;
		$key = "";
		for (@tall) {
		    #print "$_\n";
		    unless (m/\d{2}/) {
			$_ =~ s/(\d)/0$1/;
		    }
		    $key .= $_;
		}
	    } else {
		unless ($key =~ m/\d{2}/) {
		    $key =~ s/(\d)/0$1/;
		}
	    }

	    # Hmm, hva gjør vi nå?
	    my $bokstav = $key;
	    $key =~ s/\D+//g;
	    $bokstav =~ s/\d+//g;
	    $bokstav = ord($bokstav);
	    $key = $bokstav.$key;
	    $temp{$key} = [@$_];
	}
    }
#    print "\nSorterer...\n";
    my @res = sort numerically keys %temp;
    my @ret;
    for (@res) {
#	print "$_ ";
#	print "@{$temp{$_}}\n";
	push @ret, [@{$temp{$_}}];
#	print "pusher @{$temp{$_}}\n";
    }

    return @ret;

}

sub numerically {
    $a <=> $b;
}
