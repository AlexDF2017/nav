##
## Top-level Makefile for NAV
##
SHELL = @SHELL@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
perllibdir = @perllibdir@
pythonlibdir = @pythonlibdir@
javalibdir = @javalibdir@
sysconfdir = @sysconfdir@
webapps = @webapps@
webroot = @webroot@
initdir = @initdir@
localstatedir = @localstatedir@
tooldir = @tooldir@
docdir = @docdir@
crondir = @crondir@

INSTALL = @INSTALL@
nav_user = @nav_user@
top_srcdir = @top_srcdir@

NAME=nav
VERSION=$(shell cat VERSION)
PACKAGE=$(NAME)-$(VERSION)

subdirs = src \
	subsystem/lib-perl \
	subsystem/lib-python \
	subsystem/alertEngine \
	subsystem/alertprofiles \
	subsystem/arnold \
	subsystem/dbTools \
	subsystem/devBrowser \
	subsystem/deviceManagement \
	subsystem/editdb \
	subsystem/ipinfo \
	subsystem/messages \
	subsystem/l2trace \
	subsystem/logger \
	subsystem/machinetracker \
	subsystem/maintenance2 \
	subsystem/messages2 \
	subsystem/pyproxy \
	subsystem/report \
	subsystem/smsd \
	subsystem/startstop \
	subsystem/statemon \
	subsystem/statTools \
	subsystem/status \
	subsystem/thresholdMon \
	subsystem/webFront

# Make sure we export make variables to the environment
export
.PHONY: all install clean distclean installdirs dist install-all install-doc install-conf webfix

all:
	@for dir in ${subdirs}; do \
	  $(MAKE) -C $$dir $@ || exit 1; \
	done
	@echo Done

install: installdirs install-all install-conf install-doc webfix
	@echo Done

install-all:
	@for dir in ${subdirs}; do \
	  $(MAKE) -C $$dir install || exit 1; \
	done

install-doc:
	$(MAKE) -C doc install

config = doc/conf/db.conf doc/conf/nav.conf doc/conf/vPServer.conf
install-conf:
	@for file in $(config) ; do                               \
	  dirname=`dirname $$file` ;                              \
	  filename=`echo $$file | sed "s,$$dirname/*,,"` ;        \
	  target="$(DESTDIR)$(sysconfdir)/$$filename" ;           \
	  if [ -f "$$target" ]; then                              \
	    echo Skipping installation of config file $$filename; \
	  else                                                    \
	    $(INSTALL) -v -D -m 644 $$file $$target;              \
	  fi ;                                                    \
	done

installdirs:
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(prefix)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(exec_prefix)
	$(INSTALL) -v -m 0775 -d $(DESTDIR)$(sysconfdir)
	$(INSTALL) -v -m 0775 -d $(DESTDIR)$(crondir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(bindir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(docdir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(libdir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(javalibdir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(perllibdir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(pythonlibdir)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(webapps)
	$(INSTALL) -v -m 0755 -d $(DESTDIR)$(webroot)
	$(INSTALL) -v -m 0775 -d $(DESTDIR)$(tooldir)
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/log
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/log/arnold
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/log/eventEngine
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/log/getDeviceData
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/log/networkDiscovery
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/run
	$(INSTALL) -v -m 2775 -d $(DESTDIR)$(localstatedir)/rrd

webfix:
	tools/htpython.sh $(DESTDIR)$(webroot) $(webroot)

clean:
	rm -f *~ 
	@for dir in ${subdirs}; do \
	  $(MAKE) -C $$dir $@ || exit 1; \
	done

distclean: clean
	rm -f config.status config.cache config.log Makefile
	@for dir in ${subdirs}; do \
	  $(MAKE) -C $$dir $@ || exit 1; \
	done

dist: distclean
	@echo Creating source tarball...
	@SRCDIR=`pwd`;                                  \
	TARBALL=$(PACKAGE).tar.gz;                      \
	rm -f $(PACKAGE) $$TARBALL;                     \
	ln -s . $(PACKAGE);                             \
        tar -czf $$TARBALL                              \
	    --exclude .svn                              \
	    --exclude '*~'                              \
	    --exclude $(PACKAGE)/$(PACKAGE)             \
	    $(PACKAGE)/*;                               \
	rm -f $(PACKAGE);                               \
	echo Created $$TARBALL
